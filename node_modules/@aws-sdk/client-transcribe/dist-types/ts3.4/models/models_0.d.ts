import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { TranscribeServiceException as __BaseException } from "./TranscribeServiceException";
export interface AbsoluteTimeRange {
  StartTime?: number | undefined;
  EndTime?: number | undefined;
  First?: number | undefined;
  Last?: number | undefined;
}
export declare class BadRequestException extends __BaseException {
  readonly name: "BadRequestException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<BadRequestException, __BaseException>
  );
}
export declare const BaseModelName: {
  readonly NARROW_BAND: "NarrowBand";
  readonly WIDE_BAND: "WideBand";
};
export type BaseModelName = (typeof BaseModelName)[keyof typeof BaseModelName];
export declare const CallAnalyticsFeature: {
  readonly GENERATIVE_SUMMARIZATION: "GENERATIVE_SUMMARIZATION";
};
export type CallAnalyticsFeature =
  (typeof CallAnalyticsFeature)[keyof typeof CallAnalyticsFeature];
export declare const CallAnalyticsSkippedReasonCode: {
  readonly FAILED_SAFETY_GUIDELINES: "FAILED_SAFETY_GUIDELINES";
  readonly INSUFFICIENT_CONVERSATION_CONTENT: "INSUFFICIENT_CONVERSATION_CONTENT";
};
export type CallAnalyticsSkippedReasonCode =
  (typeof CallAnalyticsSkippedReasonCode)[keyof typeof CallAnalyticsSkippedReasonCode];
export interface CallAnalyticsSkippedFeature {
  Feature?: CallAnalyticsFeature | undefined;
  ReasonCode?: CallAnalyticsSkippedReasonCode | undefined;
  Message?: string | undefined;
}
export interface CallAnalyticsJobDetails {
  Skipped?: CallAnalyticsSkippedFeature[] | undefined;
}
export declare const CallAnalyticsJobStatus: {
  readonly COMPLETED: "COMPLETED";
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly QUEUED: "QUEUED";
};
export type CallAnalyticsJobStatus =
  (typeof CallAnalyticsJobStatus)[keyof typeof CallAnalyticsJobStatus];
export declare const ParticipantRole: {
  readonly AGENT: "AGENT";
  readonly CUSTOMER: "CUSTOMER";
};
export type ParticipantRole =
  (typeof ParticipantRole)[keyof typeof ParticipantRole];
export interface ChannelDefinition {
  ChannelId?: number | undefined;
  ParticipantRole?: ParticipantRole | undefined;
}
export declare const LanguageCode: {
  readonly AB_GE: "ab-GE";
  readonly AF_ZA: "af-ZA";
  readonly AR_AE: "ar-AE";
  readonly AR_SA: "ar-SA";
  readonly AST_ES: "ast-ES";
  readonly AZ_AZ: "az-AZ";
  readonly BA_RU: "ba-RU";
  readonly BE_BY: "be-BY";
  readonly BG_BG: "bg-BG";
  readonly BN_IN: "bn-IN";
  readonly BS_BA: "bs-BA";
  readonly CA_ES: "ca-ES";
  readonly CKB_IQ: "ckb-IQ";
  readonly CKB_IR: "ckb-IR";
  readonly CS_CZ: "cs-CZ";
  readonly CY_WL: "cy-WL";
  readonly DA_DK: "da-DK";
  readonly DE_CH: "de-CH";
  readonly DE_DE: "de-DE";
  readonly EL_GR: "el-GR";
  readonly EN_AB: "en-AB";
  readonly EN_AU: "en-AU";
  readonly EN_GB: "en-GB";
  readonly EN_IE: "en-IE";
  readonly EN_IN: "en-IN";
  readonly EN_NZ: "en-NZ";
  readonly EN_US: "en-US";
  readonly EN_WL: "en-WL";
  readonly EN_ZA: "en-ZA";
  readonly ES_ES: "es-ES";
  readonly ES_US: "es-US";
  readonly ET_EE: "et-EE";
  readonly ET_ET: "et-ET";
  readonly EU_ES: "eu-ES";
  readonly FA_IR: "fa-IR";
  readonly FI_FI: "fi-FI";
  readonly FR_CA: "fr-CA";
  readonly FR_FR: "fr-FR";
  readonly GL_ES: "gl-ES";
  readonly GU_IN: "gu-IN";
  readonly HA_NG: "ha-NG";
  readonly HE_IL: "he-IL";
  readonly HI_IN: "hi-IN";
  readonly HR_HR: "hr-HR";
  readonly HU_HU: "hu-HU";
  readonly HY_AM: "hy-AM";
  readonly ID_ID: "id-ID";
  readonly IS_IS: "is-IS";
  readonly IT_IT: "it-IT";
  readonly JA_JP: "ja-JP";
  readonly KAB_DZ: "kab-DZ";
  readonly KA_GE: "ka-GE";
  readonly KK_KZ: "kk-KZ";
  readonly KN_IN: "kn-IN";
  readonly KO_KR: "ko-KR";
  readonly KY_KG: "ky-KG";
  readonly LG_IN: "lg-IN";
  readonly LT_LT: "lt-LT";
  readonly LV_LV: "lv-LV";
  readonly MHR_RU: "mhr-RU";
  readonly MI_NZ: "mi-NZ";
  readonly MK_MK: "mk-MK";
  readonly ML_IN: "ml-IN";
  readonly MN_MN: "mn-MN";
  readonly MR_IN: "mr-IN";
  readonly MS_MY: "ms-MY";
  readonly MT_MT: "mt-MT";
  readonly NL_NL: "nl-NL";
  readonly NO_NO: "no-NO";
  readonly OR_IN: "or-IN";
  readonly PA_IN: "pa-IN";
  readonly PL_PL: "pl-PL";
  readonly PS_AF: "ps-AF";
  readonly PT_BR: "pt-BR";
  readonly PT_PT: "pt-PT";
  readonly RO_RO: "ro-RO";
  readonly RU_RU: "ru-RU";
  readonly RW_RW: "rw-RW";
  readonly SI_LK: "si-LK";
  readonly SK_SK: "sk-SK";
  readonly SL_SI: "sl-SI";
  readonly SO_SO: "so-SO";
  readonly SR_RS: "sr-RS";
  readonly SU_ID: "su-ID";
  readonly SV_SE: "sv-SE";
  readonly SW_BI: "sw-BI";
  readonly SW_KE: "sw-KE";
  readonly SW_RW: "sw-RW";
  readonly SW_TZ: "sw-TZ";
  readonly SW_UG: "sw-UG";
  readonly TA_IN: "ta-IN";
  readonly TE_IN: "te-IN";
  readonly TH_TH: "th-TH";
  readonly TL_PH: "tl-PH";
  readonly TR_TR: "tr-TR";
  readonly TT_RU: "tt-RU";
  readonly UG_CN: "ug-CN";
  readonly UK_UA: "uk-UA";
  readonly UZ_UZ: "uz-UZ";
  readonly VI_VN: "vi-VN";
  readonly WO_SN: "wo-SN";
  readonly ZH_CN: "zh-CN";
  readonly ZH_HK: "zh-HK";
  readonly ZH_TW: "zh-TW";
  readonly ZU_ZA: "zu-ZA";
};
export type LanguageCode = (typeof LanguageCode)[keyof typeof LanguageCode];
export interface Media {
  MediaFileUri?: string | undefined;
  RedactedMediaFileUri?: string | undefined;
}
export declare const MediaFormat: {
  readonly AMR: "amr";
  readonly FLAC: "flac";
  readonly M4A: "m4a";
  readonly MP3: "mp3";
  readonly MP4: "mp4";
  readonly OGG: "ogg";
  readonly WAV: "wav";
  readonly WEBM: "webm";
};
export type MediaFormat = (typeof MediaFormat)[keyof typeof MediaFormat];
export declare const PiiEntityType: {
  readonly ADDRESS: "ADDRESS";
  readonly ALL: "ALL";
  readonly BANK_ACCOUNT_NUMBER: "BANK_ACCOUNT_NUMBER";
  readonly BANK_ROUTING: "BANK_ROUTING";
  readonly CREDIT_DEBIT_CVV: "CREDIT_DEBIT_CVV";
  readonly CREDIT_DEBIT_EXPIRY: "CREDIT_DEBIT_EXPIRY";
  readonly CREDIT_DEBIT_NUMBER: "CREDIT_DEBIT_NUMBER";
  readonly EMAIL: "EMAIL";
  readonly NAME: "NAME";
  readonly PHONE: "PHONE";
  readonly PIN: "PIN";
  readonly SSN: "SSN";
};
export type PiiEntityType = (typeof PiiEntityType)[keyof typeof PiiEntityType];
export declare const RedactionOutput: {
  readonly REDACTED: "redacted";
  readonly REDACTED_AND_UNREDACTED: "redacted_and_unredacted";
};
export type RedactionOutput =
  (typeof RedactionOutput)[keyof typeof RedactionOutput];
export declare const RedactionType: {
  readonly PII: "PII";
};
export type RedactionType = (typeof RedactionType)[keyof typeof RedactionType];
export interface ContentRedaction {
  RedactionType: RedactionType | undefined;
  RedactionOutput: RedactionOutput | undefined;
  PiiEntityTypes?: PiiEntityType[] | undefined;
}
export interface LanguageIdSettings {
  VocabularyName?: string | undefined;
  VocabularyFilterName?: string | undefined;
  LanguageModelName?: string | undefined;
}
export interface Summarization {
  GenerateAbstractiveSummary: boolean | undefined;
}
export declare const VocabularyFilterMethod: {
  readonly MASK: "mask";
  readonly REMOVE: "remove";
  readonly TAG: "tag";
};
export type VocabularyFilterMethod =
  (typeof VocabularyFilterMethod)[keyof typeof VocabularyFilterMethod];
export interface CallAnalyticsJobSettings {
  VocabularyName?: string | undefined;
  VocabularyFilterName?: string | undefined;
  VocabularyFilterMethod?: VocabularyFilterMethod | undefined;
  LanguageModelName?: string | undefined;
  ContentRedaction?: ContentRedaction | undefined;
  LanguageOptions?: LanguageCode[] | undefined;
  LanguageIdSettings?:
    | Partial<Record<LanguageCode, LanguageIdSettings>>
    | undefined;
  Summarization?: Summarization | undefined;
}
export interface Tag {
  Key: string | undefined;
  Value: string | undefined;
}
export interface Transcript {
  TranscriptFileUri?: string | undefined;
  RedactedTranscriptFileUri?: string | undefined;
}
export interface CallAnalyticsJob {
  CallAnalyticsJobName?: string | undefined;
  CallAnalyticsJobStatus?: CallAnalyticsJobStatus | undefined;
  CallAnalyticsJobDetails?: CallAnalyticsJobDetails | undefined;
  LanguageCode?: LanguageCode | undefined;
  MediaSampleRateHertz?: number | undefined;
  MediaFormat?: MediaFormat | undefined;
  Media?: Media | undefined;
  Transcript?: Transcript | undefined;
  StartTime?: Date | undefined;
  CreationTime?: Date | undefined;
  CompletionTime?: Date | undefined;
  FailureReason?: string | undefined;
  DataAccessRoleArn?: string | undefined;
  IdentifiedLanguageScore?: number | undefined;
  Settings?: CallAnalyticsJobSettings | undefined;
  ChannelDefinitions?: ChannelDefinition[] | undefined;
  Tags?: Tag[] | undefined;
}
export interface CallAnalyticsJobSummary {
  CallAnalyticsJobName?: string | undefined;
  CreationTime?: Date | undefined;
  StartTime?: Date | undefined;
  CompletionTime?: Date | undefined;
  LanguageCode?: LanguageCode | undefined;
  CallAnalyticsJobStatus?: CallAnalyticsJobStatus | undefined;
  CallAnalyticsJobDetails?: CallAnalyticsJobDetails | undefined;
  FailureReason?: string | undefined;
}
export declare const InputType: {
  readonly POST_CALL: "POST_CALL";
  readonly REAL_TIME: "REAL_TIME";
};
export type InputType = (typeof InputType)[keyof typeof InputType];
export interface RelativeTimeRange {
  StartPercentage?: number | undefined;
  EndPercentage?: number | undefined;
  First?: number | undefined;
  Last?: number | undefined;
}
export interface InterruptionFilter {
  Threshold?: number | undefined;
  ParticipantRole?: ParticipantRole | undefined;
  AbsoluteTimeRange?: AbsoluteTimeRange | undefined;
  RelativeTimeRange?: RelativeTimeRange | undefined;
  Negate?: boolean | undefined;
}
export interface NonTalkTimeFilter {
  Threshold?: number | undefined;
  AbsoluteTimeRange?: AbsoluteTimeRange | undefined;
  RelativeTimeRange?: RelativeTimeRange | undefined;
  Negate?: boolean | undefined;
}
export declare const SentimentValue: {
  readonly MIXED: "MIXED";
  readonly NEGATIVE: "NEGATIVE";
  readonly NEUTRAL: "NEUTRAL";
  readonly POSITIVE: "POSITIVE";
};
export type SentimentValue =
  (typeof SentimentValue)[keyof typeof SentimentValue];
export interface SentimentFilter {
  Sentiments: SentimentValue[] | undefined;
  AbsoluteTimeRange?: AbsoluteTimeRange | undefined;
  RelativeTimeRange?: RelativeTimeRange | undefined;
  ParticipantRole?: ParticipantRole | undefined;
  Negate?: boolean | undefined;
}
export declare const TranscriptFilterType: {
  readonly EXACT: "EXACT";
};
export type TranscriptFilterType =
  (typeof TranscriptFilterType)[keyof typeof TranscriptFilterType];
export interface TranscriptFilter {
  TranscriptFilterType: TranscriptFilterType | undefined;
  AbsoluteTimeRange?: AbsoluteTimeRange | undefined;
  RelativeTimeRange?: RelativeTimeRange | undefined;
  ParticipantRole?: ParticipantRole | undefined;
  Negate?: boolean | undefined;
  Targets: string[] | undefined;
}
export type Rule =
  | Rule.InterruptionFilterMember
  | Rule.NonTalkTimeFilterMember
  | Rule.SentimentFilterMember
  | Rule.TranscriptFilterMember
  | Rule.$UnknownMember;
export declare namespace Rule {
  interface NonTalkTimeFilterMember {
    NonTalkTimeFilter: NonTalkTimeFilter;
    InterruptionFilter?: never;
    TranscriptFilter?: never;
    SentimentFilter?: never;
    $unknown?: never;
  }
  interface InterruptionFilterMember {
    NonTalkTimeFilter?: never;
    InterruptionFilter: InterruptionFilter;
    TranscriptFilter?: never;
    SentimentFilter?: never;
    $unknown?: never;
  }
  interface TranscriptFilterMember {
    NonTalkTimeFilter?: never;
    InterruptionFilter?: never;
    TranscriptFilter: TranscriptFilter;
    SentimentFilter?: never;
    $unknown?: never;
  }
  interface SentimentFilterMember {
    NonTalkTimeFilter?: never;
    InterruptionFilter?: never;
    TranscriptFilter?: never;
    SentimentFilter: SentimentFilter;
    $unknown?: never;
  }
  interface $UnknownMember {
    NonTalkTimeFilter?: never;
    InterruptionFilter?: never;
    TranscriptFilter?: never;
    SentimentFilter?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    NonTalkTimeFilter: (value: NonTalkTimeFilter) => T;
    InterruptionFilter: (value: InterruptionFilter) => T;
    TranscriptFilter: (value: TranscriptFilter) => T;
    SentimentFilter: (value: SentimentFilter) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: Rule, visitor: Visitor<T>) => T;
}
export interface CategoryProperties {
  CategoryName?: string | undefined;
  Rules?: Rule[] | undefined;
  CreateTime?: Date | undefined;
  LastUpdateTime?: Date | undefined;
  Tags?: Tag[] | undefined;
  InputType?: InputType | undefined;
}
export declare const MedicalScribeNoteTemplate: {
  readonly BEHAVIORAL_SOAP: "BEHAVIORAL_SOAP";
  readonly BIRP: "BIRP";
  readonly DAP: "DAP";
  readonly GIRPP: "GIRPP";
  readonly HISTORY_AND_PHYSICAL: "HISTORY_AND_PHYSICAL";
  readonly PHYSICAL_SOAP: "PHYSICAL_SOAP";
  readonly SIRP: "SIRP";
};
export type MedicalScribeNoteTemplate =
  (typeof MedicalScribeNoteTemplate)[keyof typeof MedicalScribeNoteTemplate];
export interface ClinicalNoteGenerationSettings {
  NoteTemplate?: MedicalScribeNoteTemplate | undefined;
}
export declare const CLMLanguageCode: {
  readonly DE_DE: "de-DE";
  readonly EN_AU: "en-AU";
  readonly EN_GB: "en-GB";
  readonly EN_US: "en-US";
  readonly ES_US: "es-US";
  readonly HI_IN: "hi-IN";
  readonly JA_JP: "ja-JP";
};
export type CLMLanguageCode =
  (typeof CLMLanguageCode)[keyof typeof CLMLanguageCode];
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export interface CreateCallAnalyticsCategoryRequest {
  CategoryName: string | undefined;
  Rules: Rule[] | undefined;
  Tags?: Tag[] | undefined;
  InputType?: InputType | undefined;
}
export interface CreateCallAnalyticsCategoryResponse {
  CategoryProperties?: CategoryProperties | undefined;
}
export declare class InternalFailureException extends __BaseException {
  readonly name: "InternalFailureException";
  readonly $fault: "server";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InternalFailureException, __BaseException>
  );
}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export interface InputDataConfig {
  S3Uri: string | undefined;
  TuningDataS3Uri?: string | undefined;
  DataAccessRoleArn: string | undefined;
}
export interface CreateLanguageModelRequest {
  LanguageCode: CLMLanguageCode | undefined;
  BaseModelName: BaseModelName | undefined;
  ModelName: string | undefined;
  InputDataConfig: InputDataConfig | undefined;
  Tags?: Tag[] | undefined;
}
export declare const ModelStatus: {
  readonly COMPLETED: "COMPLETED";
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
};
export type ModelStatus = (typeof ModelStatus)[keyof typeof ModelStatus];
export interface CreateLanguageModelResponse {
  LanguageCode?: CLMLanguageCode | undefined;
  BaseModelName?: BaseModelName | undefined;
  ModelName?: string | undefined;
  InputDataConfig?: InputDataConfig | undefined;
  ModelStatus?: ModelStatus | undefined;
}
export interface CreateMedicalVocabularyRequest {
  VocabularyName: string | undefined;
  LanguageCode: LanguageCode | undefined;
  VocabularyFileUri: string | undefined;
  Tags?: Tag[] | undefined;
}
export declare const VocabularyState: {
  readonly FAILED: "FAILED";
  readonly PENDING: "PENDING";
  readonly READY: "READY";
};
export type VocabularyState =
  (typeof VocabularyState)[keyof typeof VocabularyState];
export interface CreateMedicalVocabularyResponse {
  VocabularyName?: string | undefined;
  LanguageCode?: LanguageCode | undefined;
  VocabularyState?: VocabularyState | undefined;
  LastModifiedTime?: Date | undefined;
  FailureReason?: string | undefined;
}
export interface CreateVocabularyRequest {
  VocabularyName: string | undefined;
  LanguageCode: LanguageCode | undefined;
  Phrases?: string[] | undefined;
  VocabularyFileUri?: string | undefined;
  Tags?: Tag[] | undefined;
  DataAccessRoleArn?: string | undefined;
}
export interface CreateVocabularyResponse {
  VocabularyName?: string | undefined;
  LanguageCode?: LanguageCode | undefined;
  VocabularyState?: VocabularyState | undefined;
  LastModifiedTime?: Date | undefined;
  FailureReason?: string | undefined;
}
export interface CreateVocabularyFilterRequest {
  VocabularyFilterName: string | undefined;
  LanguageCode: LanguageCode | undefined;
  Words?: string[] | undefined;
  VocabularyFilterFileUri?: string | undefined;
  Tags?: Tag[] | undefined;
  DataAccessRoleArn?: string | undefined;
}
export interface CreateVocabularyFilterResponse {
  VocabularyFilterName?: string | undefined;
  LanguageCode?: LanguageCode | undefined;
  LastModifiedTime?: Date | undefined;
}
export interface DeleteCallAnalyticsCategoryRequest {
  CategoryName: string | undefined;
}
export interface DeleteCallAnalyticsCategoryResponse {}
export declare class NotFoundException extends __BaseException {
  readonly name: "NotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(opts: __ExceptionOptionType<NotFoundException, __BaseException>);
}
export interface DeleteCallAnalyticsJobRequest {
  CallAnalyticsJobName: string | undefined;
}
export interface DeleteCallAnalyticsJobResponse {}
export interface DeleteLanguageModelRequest {
  ModelName: string | undefined;
}
export interface DeleteMedicalScribeJobRequest {
  MedicalScribeJobName: string | undefined;
}
export interface DeleteMedicalTranscriptionJobRequest {
  MedicalTranscriptionJobName: string | undefined;
}
export interface DeleteMedicalVocabularyRequest {
  VocabularyName: string | undefined;
}
export interface DeleteTranscriptionJobRequest {
  TranscriptionJobName: string | undefined;
}
export interface DeleteVocabularyRequest {
  VocabularyName: string | undefined;
}
export interface DeleteVocabularyFilterRequest {
  VocabularyFilterName: string | undefined;
}
export interface DescribeLanguageModelRequest {
  ModelName: string | undefined;
}
export interface LanguageModel {
  ModelName?: string | undefined;
  CreateTime?: Date | undefined;
  LastModifiedTime?: Date | undefined;
  LanguageCode?: CLMLanguageCode | undefined;
  BaseModelName?: BaseModelName | undefined;
  ModelStatus?: ModelStatus | undefined;
  UpgradeAvailability?: boolean | undefined;
  FailureReason?: string | undefined;
  InputDataConfig?: InputDataConfig | undefined;
}
export interface DescribeLanguageModelResponse {
  LanguageModel?: LanguageModel | undefined;
}
export interface GetCallAnalyticsCategoryRequest {
  CategoryName: string | undefined;
}
export interface GetCallAnalyticsCategoryResponse {
  CategoryProperties?: CategoryProperties | undefined;
}
export interface GetCallAnalyticsJobRequest {
  CallAnalyticsJobName: string | undefined;
}
export interface GetCallAnalyticsJobResponse {
  CallAnalyticsJob?: CallAnalyticsJob | undefined;
}
export interface GetMedicalScribeJobRequest {
  MedicalScribeJobName: string | undefined;
}
export declare const MedicalScribeParticipantRole: {
  readonly CLINICIAN: "CLINICIAN";
  readonly PATIENT: "PATIENT";
};
export type MedicalScribeParticipantRole =
  (typeof MedicalScribeParticipantRole)[keyof typeof MedicalScribeParticipantRole];
export interface MedicalScribeChannelDefinition {
  ChannelId: number | undefined;
  ParticipantRole: MedicalScribeParticipantRole | undefined;
}
export declare const MedicalScribeLanguageCode: {
  readonly EN_US: "en-US";
};
export type MedicalScribeLanguageCode =
  (typeof MedicalScribeLanguageCode)[keyof typeof MedicalScribeLanguageCode];
export declare const MedicalScribeJobStatus: {
  readonly COMPLETED: "COMPLETED";
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly QUEUED: "QUEUED";
};
export type MedicalScribeJobStatus =
  (typeof MedicalScribeJobStatus)[keyof typeof MedicalScribeJobStatus];
export interface MedicalScribeOutput {
  TranscriptFileUri: string | undefined;
  ClinicalDocumentUri: string | undefined;
}
export interface MedicalScribeSettings {
  ShowSpeakerLabels?: boolean | undefined;
  MaxSpeakerLabels?: number | undefined;
  ChannelIdentification?: boolean | undefined;
  VocabularyName?: string | undefined;
  VocabularyFilterName?: string | undefined;
  VocabularyFilterMethod?: VocabularyFilterMethod | undefined;
  ClinicalNoteGenerationSettings?: ClinicalNoteGenerationSettings | undefined;
}
export interface MedicalScribeJob {
  MedicalScribeJobName?: string | undefined;
  MedicalScribeJobStatus?: MedicalScribeJobStatus | undefined;
  LanguageCode?: MedicalScribeLanguageCode | undefined;
  Media?: Media | undefined;
  MedicalScribeOutput?: MedicalScribeOutput | undefined;
  StartTime?: Date | undefined;
  CreationTime?: Date | undefined;
  CompletionTime?: Date | undefined;
  FailureReason?: string | undefined;
  Settings?: MedicalScribeSettings | undefined;
  DataAccessRoleArn?: string | undefined;
  ChannelDefinitions?: MedicalScribeChannelDefinition[] | undefined;
  MedicalScribeContextProvided?: boolean | undefined;
  Tags?: Tag[] | undefined;
}
export interface GetMedicalScribeJobResponse {
  MedicalScribeJob?: MedicalScribeJob | undefined;
}
export interface GetMedicalTranscriptionJobRequest {
  MedicalTranscriptionJobName: string | undefined;
}
export declare const MedicalContentIdentificationType: {
  readonly PHI: "PHI";
};
export type MedicalContentIdentificationType =
  (typeof MedicalContentIdentificationType)[keyof typeof MedicalContentIdentificationType];
export interface MedicalTranscriptionSetting {
  ShowSpeakerLabels?: boolean | undefined;
  MaxSpeakerLabels?: number | undefined;
  ChannelIdentification?: boolean | undefined;
  ShowAlternatives?: boolean | undefined;
  MaxAlternatives?: number | undefined;
  VocabularyName?: string | undefined;
}
export declare const Specialty: {
  readonly PRIMARYCARE: "PRIMARYCARE";
};
export type Specialty = (typeof Specialty)[keyof typeof Specialty];
export interface MedicalTranscript {
  TranscriptFileUri?: string | undefined;
}
export declare const TranscriptionJobStatus: {
  readonly COMPLETED: "COMPLETED";
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly QUEUED: "QUEUED";
};
export type TranscriptionJobStatus =
  (typeof TranscriptionJobStatus)[keyof typeof TranscriptionJobStatus];
export declare const Type: {
  readonly CONVERSATION: "CONVERSATION";
  readonly DICTATION: "DICTATION";
};
export type Type = (typeof Type)[keyof typeof Type];
export interface MedicalTranscriptionJob {
  MedicalTranscriptionJobName?: string | undefined;
  TranscriptionJobStatus?: TranscriptionJobStatus | undefined;
  LanguageCode?: LanguageCode | undefined;
  MediaSampleRateHertz?: number | undefined;
  MediaFormat?: MediaFormat | undefined;
  Media?: Media | undefined;
  Transcript?: MedicalTranscript | undefined;
  StartTime?: Date | undefined;
  CreationTime?: Date | undefined;
  CompletionTime?: Date | undefined;
  FailureReason?: string | undefined;
  Settings?: MedicalTranscriptionSetting | undefined;
  ContentIdentificationType?: MedicalContentIdentificationType | undefined;
  Specialty?: Specialty | undefined;
  Type?: Type | undefined;
  Tags?: Tag[] | undefined;
}
export interface GetMedicalTranscriptionJobResponse {
  MedicalTranscriptionJob?: MedicalTranscriptionJob | undefined;
}
export interface GetMedicalVocabularyRequest {
  VocabularyName: string | undefined;
}
export interface GetMedicalVocabularyResponse {
  VocabularyName?: string | undefined;
  LanguageCode?: LanguageCode | undefined;
  VocabularyState?: VocabularyState | undefined;
  LastModifiedTime?: Date | undefined;
  FailureReason?: string | undefined;
  DownloadUri?: string | undefined;
}
export interface GetTranscriptionJobRequest {
  TranscriptionJobName: string | undefined;
}
export interface JobExecutionSettings {
  AllowDeferredExecution?: boolean | undefined;
  DataAccessRoleArn?: string | undefined;
}
export interface LanguageCodeItem {
  LanguageCode?: LanguageCode | undefined;
  DurationInSeconds?: number | undefined;
}
export interface ModelSettings {
  LanguageModelName?: string | undefined;
}
export interface Settings {
  VocabularyName?: string | undefined;
  ShowSpeakerLabels?: boolean | undefined;
  MaxSpeakerLabels?: number | undefined;
  ChannelIdentification?: boolean | undefined;
  ShowAlternatives?: boolean | undefined;
  MaxAlternatives?: number | undefined;
  VocabularyFilterName?: string | undefined;
  VocabularyFilterMethod?: VocabularyFilterMethod | undefined;
}
export declare const SubtitleFormat: {
  readonly SRT: "srt";
  readonly VTT: "vtt";
};
export type SubtitleFormat =
  (typeof SubtitleFormat)[keyof typeof SubtitleFormat];
export interface SubtitlesOutput {
  Formats?: SubtitleFormat[] | undefined;
  SubtitleFileUris?: string[] | undefined;
  OutputStartIndex?: number | undefined;
}
export declare const ToxicityCategory: {
  readonly ALL: "ALL";
};
export type ToxicityCategory =
  (typeof ToxicityCategory)[keyof typeof ToxicityCategory];
export interface ToxicityDetectionSettings {
  ToxicityCategories: ToxicityCategory[] | undefined;
}
export interface TranscriptionJob {
  TranscriptionJobName?: string | undefined;
  TranscriptionJobStatus?: TranscriptionJobStatus | undefined;
  LanguageCode?: LanguageCode | undefined;
  MediaSampleRateHertz?: number | undefined;
  MediaFormat?: MediaFormat | undefined;
  Media?: Media | undefined;
  Transcript?: Transcript | undefined;
  StartTime?: Date | undefined;
  CreationTime?: Date | undefined;
  CompletionTime?: Date | undefined;
  FailureReason?: string | undefined;
  Settings?: Settings | undefined;
  ModelSettings?: ModelSettings | undefined;
  JobExecutionSettings?: JobExecutionSettings | undefined;
  ContentRedaction?: ContentRedaction | undefined;
  IdentifyLanguage?: boolean | undefined;
  IdentifyMultipleLanguages?: boolean | undefined;
  LanguageOptions?: LanguageCode[] | undefined;
  IdentifiedLanguageScore?: number | undefined;
  LanguageCodes?: LanguageCodeItem[] | undefined;
  Tags?: Tag[] | undefined;
  Subtitles?: SubtitlesOutput | undefined;
  LanguageIdSettings?:
    | Partial<Record<LanguageCode, LanguageIdSettings>>
    | undefined;
  ToxicityDetection?: ToxicityDetectionSettings[] | undefined;
}
export interface GetTranscriptionJobResponse {
  TranscriptionJob?: TranscriptionJob | undefined;
}
export interface GetVocabularyRequest {
  VocabularyName: string | undefined;
}
export interface GetVocabularyResponse {
  VocabularyName?: string | undefined;
  LanguageCode?: LanguageCode | undefined;
  VocabularyState?: VocabularyState | undefined;
  LastModifiedTime?: Date | undefined;
  FailureReason?: string | undefined;
  DownloadUri?: string | undefined;
}
export interface GetVocabularyFilterRequest {
  VocabularyFilterName: string | undefined;
}
export interface GetVocabularyFilterResponse {
  VocabularyFilterName?: string | undefined;
  LanguageCode?: LanguageCode | undefined;
  LastModifiedTime?: Date | undefined;
  DownloadUri?: string | undefined;
}
export interface ListCallAnalyticsCategoriesRequest {
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface ListCallAnalyticsCategoriesResponse {
  NextToken?: string | undefined;
  Categories?: CategoryProperties[] | undefined;
}
export interface ListCallAnalyticsJobsRequest {
  Status?: CallAnalyticsJobStatus | undefined;
  JobNameContains?: string | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface ListCallAnalyticsJobsResponse {
  Status?: CallAnalyticsJobStatus | undefined;
  NextToken?: string | undefined;
  CallAnalyticsJobSummaries?: CallAnalyticsJobSummary[] | undefined;
}
export interface ListLanguageModelsRequest {
  StatusEquals?: ModelStatus | undefined;
  NameContains?: string | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface ListLanguageModelsResponse {
  NextToken?: string | undefined;
  Models?: LanguageModel[] | undefined;
}
export interface ListMedicalScribeJobsRequest {
  Status?: MedicalScribeJobStatus | undefined;
  JobNameContains?: string | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface MedicalScribeJobSummary {
  MedicalScribeJobName?: string | undefined;
  CreationTime?: Date | undefined;
  StartTime?: Date | undefined;
  CompletionTime?: Date | undefined;
  LanguageCode?: MedicalScribeLanguageCode | undefined;
  MedicalScribeJobStatus?: MedicalScribeJobStatus | undefined;
  FailureReason?: string | undefined;
}
export interface ListMedicalScribeJobsResponse {
  Status?: MedicalScribeJobStatus | undefined;
  NextToken?: string | undefined;
  MedicalScribeJobSummaries?: MedicalScribeJobSummary[] | undefined;
}
export interface ListMedicalTranscriptionJobsRequest {
  Status?: TranscriptionJobStatus | undefined;
  JobNameContains?: string | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export declare const OutputLocationType: {
  readonly CUSTOMER_BUCKET: "CUSTOMER_BUCKET";
  readonly SERVICE_BUCKET: "SERVICE_BUCKET";
};
export type OutputLocationType =
  (typeof OutputLocationType)[keyof typeof OutputLocationType];
export interface MedicalTranscriptionJobSummary {
  MedicalTranscriptionJobName?: string | undefined;
  CreationTime?: Date | undefined;
  StartTime?: Date | undefined;
  CompletionTime?: Date | undefined;
  LanguageCode?: LanguageCode | undefined;
  TranscriptionJobStatus?: TranscriptionJobStatus | undefined;
  FailureReason?: string | undefined;
  OutputLocationType?: OutputLocationType | undefined;
  Specialty?: Specialty | undefined;
  ContentIdentificationType?: MedicalContentIdentificationType | undefined;
  Type?: Type | undefined;
}
export interface ListMedicalTranscriptionJobsResponse {
  Status?: TranscriptionJobStatus | undefined;
  NextToken?: string | undefined;
  MedicalTranscriptionJobSummaries?:
    | MedicalTranscriptionJobSummary[]
    | undefined;
}
export interface ListMedicalVocabulariesRequest {
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
  StateEquals?: VocabularyState | undefined;
  NameContains?: string | undefined;
}
export interface VocabularyInfo {
  VocabularyName?: string | undefined;
  LanguageCode?: LanguageCode | undefined;
  LastModifiedTime?: Date | undefined;
  VocabularyState?: VocabularyState | undefined;
}
export interface ListMedicalVocabulariesResponse {
  Status?: VocabularyState | undefined;
  NextToken?: string | undefined;
  Vocabularies?: VocabularyInfo[] | undefined;
}
export interface ListTagsForResourceRequest {
  ResourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  ResourceArn?: string | undefined;
  Tags?: Tag[] | undefined;
}
export interface ListTranscriptionJobsRequest {
  Status?: TranscriptionJobStatus | undefined;
  JobNameContains?: string | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface TranscriptionJobSummary {
  TranscriptionJobName?: string | undefined;
  CreationTime?: Date | undefined;
  StartTime?: Date | undefined;
  CompletionTime?: Date | undefined;
  LanguageCode?: LanguageCode | undefined;
  TranscriptionJobStatus?: TranscriptionJobStatus | undefined;
  FailureReason?: string | undefined;
  OutputLocationType?: OutputLocationType | undefined;
  ContentRedaction?: ContentRedaction | undefined;
  ModelSettings?: ModelSettings | undefined;
  IdentifyLanguage?: boolean | undefined;
  IdentifyMultipleLanguages?: boolean | undefined;
  IdentifiedLanguageScore?: number | undefined;
  LanguageCodes?: LanguageCodeItem[] | undefined;
  ToxicityDetection?: ToxicityDetectionSettings[] | undefined;
}
export interface ListTranscriptionJobsResponse {
  Status?: TranscriptionJobStatus | undefined;
  NextToken?: string | undefined;
  TranscriptionJobSummaries?: TranscriptionJobSummary[] | undefined;
}
export interface ListVocabulariesRequest {
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
  StateEquals?: VocabularyState | undefined;
  NameContains?: string | undefined;
}
export interface ListVocabulariesResponse {
  Status?: VocabularyState | undefined;
  NextToken?: string | undefined;
  Vocabularies?: VocabularyInfo[] | undefined;
}
export interface ListVocabularyFiltersRequest {
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
  NameContains?: string | undefined;
}
export interface VocabularyFilterInfo {
  VocabularyFilterName?: string | undefined;
  LanguageCode?: LanguageCode | undefined;
  LastModifiedTime?: Date | undefined;
}
export interface ListVocabularyFiltersResponse {
  NextToken?: string | undefined;
  VocabularyFilters?: VocabularyFilterInfo[] | undefined;
}
export declare const Pronouns: {
  readonly HE_HIM: "HE_HIM";
  readonly SHE_HER: "SHE_HER";
  readonly THEY_THEM: "THEY_THEM";
};
export type Pronouns = (typeof Pronouns)[keyof typeof Pronouns];
export interface MedicalScribePatientContext {
  Pronouns?: Pronouns | undefined;
}
export interface MedicalScribeContext {
  PatientContext?: MedicalScribePatientContext | undefined;
}
export interface StartCallAnalyticsJobRequest {
  CallAnalyticsJobName: string | undefined;
  Media: Media | undefined;
  OutputLocation?: string | undefined;
  OutputEncryptionKMSKeyId?: string | undefined;
  DataAccessRoleArn?: string | undefined;
  Settings?: CallAnalyticsJobSettings | undefined;
  Tags?: Tag[] | undefined;
  ChannelDefinitions?: ChannelDefinition[] | undefined;
}
export interface StartCallAnalyticsJobResponse {
  CallAnalyticsJob?: CallAnalyticsJob | undefined;
}
export interface StartMedicalScribeJobRequest {
  MedicalScribeJobName: string | undefined;
  Media: Media | undefined;
  OutputBucketName: string | undefined;
  OutputEncryptionKMSKeyId?: string | undefined;
  KMSEncryptionContext?: Record<string, string> | undefined;
  DataAccessRoleArn: string | undefined;
  Settings: MedicalScribeSettings | undefined;
  ChannelDefinitions?: MedicalScribeChannelDefinition[] | undefined;
  Tags?: Tag[] | undefined;
  MedicalScribeContext?: MedicalScribeContext | undefined;
}
export interface StartMedicalScribeJobResponse {
  MedicalScribeJob?: MedicalScribeJob | undefined;
}
export interface StartMedicalTranscriptionJobRequest {
  MedicalTranscriptionJobName: string | undefined;
  LanguageCode: LanguageCode | undefined;
  MediaSampleRateHertz?: number | undefined;
  MediaFormat?: MediaFormat | undefined;
  Media: Media | undefined;
  OutputBucketName: string | undefined;
  OutputKey?: string | undefined;
  OutputEncryptionKMSKeyId?: string | undefined;
  KMSEncryptionContext?: Record<string, string> | undefined;
  Settings?: MedicalTranscriptionSetting | undefined;
  ContentIdentificationType?: MedicalContentIdentificationType | undefined;
  Specialty: Specialty | undefined;
  Type: Type | undefined;
  Tags?: Tag[] | undefined;
}
export interface StartMedicalTranscriptionJobResponse {
  MedicalTranscriptionJob?: MedicalTranscriptionJob | undefined;
}
export interface Subtitles {
  Formats?: SubtitleFormat[] | undefined;
  OutputStartIndex?: number | undefined;
}
export interface StartTranscriptionJobRequest {
  TranscriptionJobName: string | undefined;
  LanguageCode?: LanguageCode | undefined;
  MediaSampleRateHertz?: number | undefined;
  MediaFormat?: MediaFormat | undefined;
  Media: Media | undefined;
  OutputBucketName?: string | undefined;
  OutputKey?: string | undefined;
  OutputEncryptionKMSKeyId?: string | undefined;
  KMSEncryptionContext?: Record<string, string> | undefined;
  Settings?: Settings | undefined;
  ModelSettings?: ModelSettings | undefined;
  JobExecutionSettings?: JobExecutionSettings | undefined;
  ContentRedaction?: ContentRedaction | undefined;
  IdentifyLanguage?: boolean | undefined;
  IdentifyMultipleLanguages?: boolean | undefined;
  LanguageOptions?: LanguageCode[] | undefined;
  Subtitles?: Subtitles | undefined;
  Tags?: Tag[] | undefined;
  LanguageIdSettings?:
    | Partial<Record<LanguageCode, LanguageIdSettings>>
    | undefined;
  ToxicityDetection?: ToxicityDetectionSettings[] | undefined;
}
export interface StartTranscriptionJobResponse {
  TranscriptionJob?: TranscriptionJob | undefined;
}
export interface TagResourceRequest {
  ResourceArn: string | undefined;
  Tags: Tag[] | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  ResourceArn: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface UpdateCallAnalyticsCategoryRequest {
  CategoryName: string | undefined;
  Rules: Rule[] | undefined;
  InputType?: InputType | undefined;
}
export interface UpdateCallAnalyticsCategoryResponse {
  CategoryProperties?: CategoryProperties | undefined;
}
export interface UpdateMedicalVocabularyRequest {
  VocabularyName: string | undefined;
  LanguageCode: LanguageCode | undefined;
  VocabularyFileUri: string | undefined;
}
export interface UpdateMedicalVocabularyResponse {
  VocabularyName?: string | undefined;
  LanguageCode?: LanguageCode | undefined;
  LastModifiedTime?: Date | undefined;
  VocabularyState?: VocabularyState | undefined;
}
export interface UpdateVocabularyRequest {
  VocabularyName: string | undefined;
  LanguageCode: LanguageCode | undefined;
  Phrases?: string[] | undefined;
  VocabularyFileUri?: string | undefined;
  DataAccessRoleArn?: string | undefined;
}
export interface UpdateVocabularyResponse {
  VocabularyName?: string | undefined;
  LanguageCode?: LanguageCode | undefined;
  LastModifiedTime?: Date | undefined;
  VocabularyState?: VocabularyState | undefined;
}
export interface UpdateVocabularyFilterRequest {
  VocabularyFilterName: string | undefined;
  Words?: string[] | undefined;
  VocabularyFilterFileUri?: string | undefined;
  DataAccessRoleArn?: string | undefined;
}
export interface UpdateVocabularyFilterResponse {
  VocabularyFilterName?: string | undefined;
  LanguageCode?: LanguageCode | undefined;
  LastModifiedTime?: Date | undefined;
}
export declare const MedicalScribePatientContextFilterSensitiveLog: (
  obj: MedicalScribePatientContext
) => any;
export declare const MedicalScribeContextFilterSensitiveLog: (
  obj: MedicalScribeContext
) => any;
export declare const StartMedicalScribeJobRequestFilterSensitiveLog: (
  obj: StartMedicalScribeJobRequest
) => any;
