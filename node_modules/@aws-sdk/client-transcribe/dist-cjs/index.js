"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var index_exports = {};
__export(index_exports, {
  BadRequestException: () => BadRequestException,
  BaseModelName: () => BaseModelName,
  CLMLanguageCode: () => CLMLanguageCode,
  CallAnalyticsFeature: () => CallAnalyticsFeature,
  CallAnalyticsJobStatus: () => CallAnalyticsJobStatus,
  CallAnalyticsSkippedReasonCode: () => CallAnalyticsSkippedReasonCode,
  ConflictException: () => ConflictException,
  CreateCallAnalyticsCategoryCommand: () => CreateCallAnalyticsCategoryCommand,
  CreateLanguageModelCommand: () => CreateLanguageModelCommand,
  CreateMedicalVocabularyCommand: () => CreateMedicalVocabularyCommand,
  CreateVocabularyCommand: () => CreateVocabularyCommand,
  CreateVocabularyFilterCommand: () => CreateVocabularyFilterCommand,
  DeleteCallAnalyticsCategoryCommand: () => DeleteCallAnalyticsCategoryCommand,
  DeleteCallAnalyticsJobCommand: () => DeleteCallAnalyticsJobCommand,
  DeleteLanguageModelCommand: () => DeleteLanguageModelCommand,
  DeleteMedicalScribeJobCommand: () => DeleteMedicalScribeJobCommand,
  DeleteMedicalTranscriptionJobCommand: () => DeleteMedicalTranscriptionJobCommand,
  DeleteMedicalVocabularyCommand: () => DeleteMedicalVocabularyCommand,
  DeleteTranscriptionJobCommand: () => DeleteTranscriptionJobCommand,
  DeleteVocabularyCommand: () => DeleteVocabularyCommand,
  DeleteVocabularyFilterCommand: () => DeleteVocabularyFilterCommand,
  DescribeLanguageModelCommand: () => DescribeLanguageModelCommand,
  GetCallAnalyticsCategoryCommand: () => GetCallAnalyticsCategoryCommand,
  GetCallAnalyticsJobCommand: () => GetCallAnalyticsJobCommand,
  GetMedicalScribeJobCommand: () => GetMedicalScribeJobCommand,
  GetMedicalTranscriptionJobCommand: () => GetMedicalTranscriptionJobCommand,
  GetMedicalVocabularyCommand: () => GetMedicalVocabularyCommand,
  GetTranscriptionJobCommand: () => GetTranscriptionJobCommand,
  GetVocabularyCommand: () => GetVocabularyCommand,
  GetVocabularyFilterCommand: () => GetVocabularyFilterCommand,
  InputType: () => InputType,
  InternalFailureException: () => InternalFailureException,
  LanguageCode: () => LanguageCode,
  LimitExceededException: () => LimitExceededException,
  ListCallAnalyticsCategoriesCommand: () => ListCallAnalyticsCategoriesCommand,
  ListCallAnalyticsJobsCommand: () => ListCallAnalyticsJobsCommand,
  ListLanguageModelsCommand: () => ListLanguageModelsCommand,
  ListMedicalScribeJobsCommand: () => ListMedicalScribeJobsCommand,
  ListMedicalTranscriptionJobsCommand: () => ListMedicalTranscriptionJobsCommand,
  ListMedicalVocabulariesCommand: () => ListMedicalVocabulariesCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  ListTranscriptionJobsCommand: () => ListTranscriptionJobsCommand,
  ListVocabulariesCommand: () => ListVocabulariesCommand,
  ListVocabularyFiltersCommand: () => ListVocabularyFiltersCommand,
  MediaFormat: () => MediaFormat,
  MedicalContentIdentificationType: () => MedicalContentIdentificationType,
  MedicalScribeContextFilterSensitiveLog: () => MedicalScribeContextFilterSensitiveLog,
  MedicalScribeJobStatus: () => MedicalScribeJobStatus,
  MedicalScribeLanguageCode: () => MedicalScribeLanguageCode,
  MedicalScribeNoteTemplate: () => MedicalScribeNoteTemplate,
  MedicalScribeParticipantRole: () => MedicalScribeParticipantRole,
  MedicalScribePatientContextFilterSensitiveLog: () => MedicalScribePatientContextFilterSensitiveLog,
  ModelStatus: () => ModelStatus,
  NotFoundException: () => NotFoundException,
  OutputLocationType: () => OutputLocationType,
  ParticipantRole: () => ParticipantRole,
  PiiEntityType: () => PiiEntityType,
  Pronouns: () => Pronouns,
  RedactionOutput: () => RedactionOutput,
  RedactionType: () => RedactionType,
  Rule: () => Rule,
  SentimentValue: () => SentimentValue,
  Specialty: () => Specialty,
  StartCallAnalyticsJobCommand: () => StartCallAnalyticsJobCommand,
  StartMedicalScribeJobCommand: () => StartMedicalScribeJobCommand,
  StartMedicalScribeJobRequestFilterSensitiveLog: () => StartMedicalScribeJobRequestFilterSensitiveLog,
  StartMedicalTranscriptionJobCommand: () => StartMedicalTranscriptionJobCommand,
  StartTranscriptionJobCommand: () => StartTranscriptionJobCommand,
  SubtitleFormat: () => SubtitleFormat,
  TagResourceCommand: () => TagResourceCommand,
  ToxicityCategory: () => ToxicityCategory,
  Transcribe: () => Transcribe,
  TranscribeClient: () => TranscribeClient,
  TranscribeServiceException: () => TranscribeServiceException,
  TranscriptFilterType: () => TranscriptFilterType,
  TranscriptionJobStatus: () => TranscriptionJobStatus,
  Type: () => Type,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateCallAnalyticsCategoryCommand: () => UpdateCallAnalyticsCategoryCommand,
  UpdateMedicalVocabularyCommand: () => UpdateMedicalVocabularyCommand,
  UpdateVocabularyCommand: () => UpdateVocabularyCommand,
  UpdateVocabularyFilterCommand: () => UpdateVocabularyFilterCommand,
  VocabularyFilterMethod: () => VocabularyFilterMethod,
  VocabularyState: () => VocabularyState,
  __Client: () => import_smithy_client.Client,
  paginateListCallAnalyticsCategories: () => paginateListCallAnalyticsCategories,
  paginateListCallAnalyticsJobs: () => paginateListCallAnalyticsJobs,
  paginateListLanguageModels: () => paginateListLanguageModels,
  paginateListMedicalScribeJobs: () => paginateListMedicalScribeJobs,
  paginateListMedicalTranscriptionJobs: () => paginateListMedicalTranscriptionJobs,
  paginateListMedicalVocabularies: () => paginateListMedicalVocabularies,
  paginateListTranscriptionJobs: () => paginateListTranscriptionJobs,
  paginateListVocabularies: () => paginateListVocabularies,
  paginateListVocabularyFilters: () => paginateListVocabularyFilters
});
module.exports = __toCommonJS(index_exports);

// src/TranscribeClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return Object.assign(options, {
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "transcribe"
  });
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/TranscribeClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = Object.assign(
    (0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig),
    (0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig),
    (0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig),
    getHttpAuthExtensionConfiguration(runtimeConfig)
  );
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return Object.assign(
    runtimeConfig,
    (0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    (0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    (0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    resolveHttpAuthRuntimeConfig(extensionConfiguration)
  );
}, "resolveRuntimeExtensions");

// src/TranscribeClient.ts
var TranscribeClient = class extends import_smithy_client.Client {
  static {
    __name(this, "TranscribeClient");
  }
  /**
   * The resolved configuration of TranscribeClient class. This is resolved and normalized from the {@link TranscribeClientConfig | constructor configuration interface}.
   */
  config;
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    super(_config_0);
    this.initConfig = _config_0;
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_1);
    const _config_3 = (0, import_middleware_retry.resolveRetryConfig)(_config_2);
    const _config_4 = (0, import_config_resolver.resolveRegionConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: import_httpAuthSchemeProvider.defaultTranscribeHttpAuthSchemeParametersProvider,
        identityProviderConfigProvider: /* @__PURE__ */ __name(async (config) => new import_core.DefaultIdentityProviderConfig({
          "aws.auth#sigv4": config.credentials
        }), "identityProviderConfigProvider")
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
};

// src/Transcribe.ts


// src/commands/CreateCallAnalyticsCategoryCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");


// src/protocols/Aws_json1_1.ts
var import_core2 = require("@aws-sdk/core");



// src/models/models_0.ts


// src/models/TranscribeServiceException.ts

var TranscribeServiceException = class _TranscribeServiceException extends import_smithy_client.ServiceException {
  static {
    __name(this, "TranscribeServiceException");
  }
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _TranscribeServiceException.prototype);
  }
};

// src/models/models_0.ts
var BadRequestException = class _BadRequestException extends TranscribeServiceException {
  static {
    __name(this, "BadRequestException");
  }
  name = "BadRequestException";
  $fault = "client";
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "BadRequestException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _BadRequestException.prototype);
    this.Message = opts.Message;
  }
};
var BaseModelName = {
  NARROW_BAND: "NarrowBand",
  WIDE_BAND: "WideBand"
};
var CallAnalyticsFeature = {
  GENERATIVE_SUMMARIZATION: "GENERATIVE_SUMMARIZATION"
};
var CallAnalyticsSkippedReasonCode = {
  FAILED_SAFETY_GUIDELINES: "FAILED_SAFETY_GUIDELINES",
  INSUFFICIENT_CONVERSATION_CONTENT: "INSUFFICIENT_CONVERSATION_CONTENT"
};
var CallAnalyticsJobStatus = {
  COMPLETED: "COMPLETED",
  FAILED: "FAILED",
  IN_PROGRESS: "IN_PROGRESS",
  QUEUED: "QUEUED"
};
var ParticipantRole = {
  AGENT: "AGENT",
  CUSTOMER: "CUSTOMER"
};
var LanguageCode = {
  AB_GE: "ab-GE",
  AF_ZA: "af-ZA",
  AR_AE: "ar-AE",
  AR_SA: "ar-SA",
  AST_ES: "ast-ES",
  AZ_AZ: "az-AZ",
  BA_RU: "ba-RU",
  BE_BY: "be-BY",
  BG_BG: "bg-BG",
  BN_IN: "bn-IN",
  BS_BA: "bs-BA",
  CA_ES: "ca-ES",
  CKB_IQ: "ckb-IQ",
  CKB_IR: "ckb-IR",
  CS_CZ: "cs-CZ",
  CY_WL: "cy-WL",
  DA_DK: "da-DK",
  DE_CH: "de-CH",
  DE_DE: "de-DE",
  EL_GR: "el-GR",
  EN_AB: "en-AB",
  EN_AU: "en-AU",
  EN_GB: "en-GB",
  EN_IE: "en-IE",
  EN_IN: "en-IN",
  EN_NZ: "en-NZ",
  EN_US: "en-US",
  EN_WL: "en-WL",
  EN_ZA: "en-ZA",
  ES_ES: "es-ES",
  ES_US: "es-US",
  ET_EE: "et-EE",
  ET_ET: "et-ET",
  EU_ES: "eu-ES",
  FA_IR: "fa-IR",
  FI_FI: "fi-FI",
  FR_CA: "fr-CA",
  FR_FR: "fr-FR",
  GL_ES: "gl-ES",
  GU_IN: "gu-IN",
  HA_NG: "ha-NG",
  HE_IL: "he-IL",
  HI_IN: "hi-IN",
  HR_HR: "hr-HR",
  HU_HU: "hu-HU",
  HY_AM: "hy-AM",
  ID_ID: "id-ID",
  IS_IS: "is-IS",
  IT_IT: "it-IT",
  JA_JP: "ja-JP",
  KAB_DZ: "kab-DZ",
  KA_GE: "ka-GE",
  KK_KZ: "kk-KZ",
  KN_IN: "kn-IN",
  KO_KR: "ko-KR",
  KY_KG: "ky-KG",
  LG_IN: "lg-IN",
  LT_LT: "lt-LT",
  LV_LV: "lv-LV",
  MHR_RU: "mhr-RU",
  MI_NZ: "mi-NZ",
  MK_MK: "mk-MK",
  ML_IN: "ml-IN",
  MN_MN: "mn-MN",
  MR_IN: "mr-IN",
  MS_MY: "ms-MY",
  MT_MT: "mt-MT",
  NL_NL: "nl-NL",
  NO_NO: "no-NO",
  OR_IN: "or-IN",
  PA_IN: "pa-IN",
  PL_PL: "pl-PL",
  PS_AF: "ps-AF",
  PT_BR: "pt-BR",
  PT_PT: "pt-PT",
  RO_RO: "ro-RO",
  RU_RU: "ru-RU",
  RW_RW: "rw-RW",
  SI_LK: "si-LK",
  SK_SK: "sk-SK",
  SL_SI: "sl-SI",
  SO_SO: "so-SO",
  SR_RS: "sr-RS",
  SU_ID: "su-ID",
  SV_SE: "sv-SE",
  SW_BI: "sw-BI",
  SW_KE: "sw-KE",
  SW_RW: "sw-RW",
  SW_TZ: "sw-TZ",
  SW_UG: "sw-UG",
  TA_IN: "ta-IN",
  TE_IN: "te-IN",
  TH_TH: "th-TH",
  TL_PH: "tl-PH",
  TR_TR: "tr-TR",
  TT_RU: "tt-RU",
  UG_CN: "ug-CN",
  UK_UA: "uk-UA",
  UZ_UZ: "uz-UZ",
  VI_VN: "vi-VN",
  WO_SN: "wo-SN",
  ZH_CN: "zh-CN",
  ZH_HK: "zh-HK",
  ZH_TW: "zh-TW",
  ZU_ZA: "zu-ZA"
};
var MediaFormat = {
  AMR: "amr",
  FLAC: "flac",
  M4A: "m4a",
  MP3: "mp3",
  MP4: "mp4",
  OGG: "ogg",
  WAV: "wav",
  WEBM: "webm"
};
var PiiEntityType = {
  ADDRESS: "ADDRESS",
  ALL: "ALL",
  BANK_ACCOUNT_NUMBER: "BANK_ACCOUNT_NUMBER",
  BANK_ROUTING: "BANK_ROUTING",
  CREDIT_DEBIT_CVV: "CREDIT_DEBIT_CVV",
  CREDIT_DEBIT_EXPIRY: "CREDIT_DEBIT_EXPIRY",
  CREDIT_DEBIT_NUMBER: "CREDIT_DEBIT_NUMBER",
  EMAIL: "EMAIL",
  NAME: "NAME",
  PHONE: "PHONE",
  PIN: "PIN",
  SSN: "SSN"
};
var RedactionOutput = {
  REDACTED: "redacted",
  REDACTED_AND_UNREDACTED: "redacted_and_unredacted"
};
var RedactionType = {
  PII: "PII"
};
var VocabularyFilterMethod = {
  MASK: "mask",
  REMOVE: "remove",
  TAG: "tag"
};
var InputType = {
  POST_CALL: "POST_CALL",
  REAL_TIME: "REAL_TIME"
};
var SentimentValue = {
  MIXED: "MIXED",
  NEGATIVE: "NEGATIVE",
  NEUTRAL: "NEUTRAL",
  POSITIVE: "POSITIVE"
};
var TranscriptFilterType = {
  EXACT: "EXACT"
};
var Rule;
((Rule3) => {
  Rule3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.NonTalkTimeFilter !== void 0) return visitor.NonTalkTimeFilter(value.NonTalkTimeFilter);
    if (value.InterruptionFilter !== void 0) return visitor.InterruptionFilter(value.InterruptionFilter);
    if (value.TranscriptFilter !== void 0) return visitor.TranscriptFilter(value.TranscriptFilter);
    if (value.SentimentFilter !== void 0) return visitor.SentimentFilter(value.SentimentFilter);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(Rule || (Rule = {}));
var MedicalScribeNoteTemplate = {
  BEHAVIORAL_SOAP: "BEHAVIORAL_SOAP",
  BIRP: "BIRP",
  DAP: "DAP",
  GIRPP: "GIRPP",
  HISTORY_AND_PHYSICAL: "HISTORY_AND_PHYSICAL",
  PHYSICAL_SOAP: "PHYSICAL_SOAP",
  SIRP: "SIRP"
};
var CLMLanguageCode = {
  DE_DE: "de-DE",
  EN_AU: "en-AU",
  EN_GB: "en-GB",
  EN_US: "en-US",
  ES_US: "es-US",
  HI_IN: "hi-IN",
  JA_JP: "ja-JP"
};
var ConflictException = class _ConflictException extends TranscribeServiceException {
  static {
    __name(this, "ConflictException");
  }
  name = "ConflictException";
  $fault = "client";
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ConflictException.prototype);
    this.Message = opts.Message;
  }
};
var InternalFailureException = class _InternalFailureException extends TranscribeServiceException {
  static {
    __name(this, "InternalFailureException");
  }
  name = "InternalFailureException";
  $fault = "server";
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalFailureException",
      $fault: "server",
      ...opts
    });
    Object.setPrototypeOf(this, _InternalFailureException.prototype);
    this.Message = opts.Message;
  }
};
var LimitExceededException = class _LimitExceededException extends TranscribeServiceException {
  static {
    __name(this, "LimitExceededException");
  }
  name = "LimitExceededException";
  $fault = "client";
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "LimitExceededException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _LimitExceededException.prototype);
    this.Message = opts.Message;
  }
};
var ModelStatus = {
  COMPLETED: "COMPLETED",
  FAILED: "FAILED",
  IN_PROGRESS: "IN_PROGRESS"
};
var VocabularyState = {
  FAILED: "FAILED",
  PENDING: "PENDING",
  READY: "READY"
};
var NotFoundException = class _NotFoundException extends TranscribeServiceException {
  static {
    __name(this, "NotFoundException");
  }
  name = "NotFoundException";
  $fault = "client";
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "NotFoundException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _NotFoundException.prototype);
    this.Message = opts.Message;
  }
};
var MedicalScribeParticipantRole = {
  CLINICIAN: "CLINICIAN",
  PATIENT: "PATIENT"
};
var MedicalScribeLanguageCode = {
  EN_US: "en-US"
};
var MedicalScribeJobStatus = {
  COMPLETED: "COMPLETED",
  FAILED: "FAILED",
  IN_PROGRESS: "IN_PROGRESS",
  QUEUED: "QUEUED"
};
var MedicalContentIdentificationType = {
  PHI: "PHI"
};
var Specialty = {
  PRIMARYCARE: "PRIMARYCARE"
};
var TranscriptionJobStatus = {
  COMPLETED: "COMPLETED",
  FAILED: "FAILED",
  IN_PROGRESS: "IN_PROGRESS",
  QUEUED: "QUEUED"
};
var Type = {
  CONVERSATION: "CONVERSATION",
  DICTATION: "DICTATION"
};
var SubtitleFormat = {
  SRT: "srt",
  VTT: "vtt"
};
var ToxicityCategory = {
  ALL: "ALL"
};
var OutputLocationType = {
  CUSTOMER_BUCKET: "CUSTOMER_BUCKET",
  SERVICE_BUCKET: "SERVICE_BUCKET"
};
var Pronouns = {
  HE_HIM: "HE_HIM",
  SHE_HER: "SHE_HER",
  THEY_THEM: "THEY_THEM"
};
var MedicalScribePatientContextFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Pronouns && { Pronouns: import_smithy_client.SENSITIVE_STRING }
}), "MedicalScribePatientContextFilterSensitiveLog");
var MedicalScribeContextFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.PatientContext && { PatientContext: MedicalScribePatientContextFilterSensitiveLog(obj.PatientContext) }
}), "MedicalScribeContextFilterSensitiveLog");
var StartMedicalScribeJobRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.MedicalScribeContext && {
    MedicalScribeContext: MedicalScribeContextFilterSensitiveLog(obj.MedicalScribeContext)
  }
}), "StartMedicalScribeJobRequestFilterSensitiveLog");

// src/protocols/Aws_json1_1.ts
var se_CreateCallAnalyticsCategoryCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateCallAnalyticsCategory");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateCallAnalyticsCategoryCommand");
var se_CreateLanguageModelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateLanguageModel");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateLanguageModelCommand");
var se_CreateMedicalVocabularyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateMedicalVocabulary");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateMedicalVocabularyCommand");
var se_CreateVocabularyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateVocabulary");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateVocabularyCommand");
var se_CreateVocabularyFilterCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateVocabularyFilter");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateVocabularyFilterCommand");
var se_DeleteCallAnalyticsCategoryCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteCallAnalyticsCategory");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteCallAnalyticsCategoryCommand");
var se_DeleteCallAnalyticsJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteCallAnalyticsJob");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteCallAnalyticsJobCommand");
var se_DeleteLanguageModelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteLanguageModel");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteLanguageModelCommand");
var se_DeleteMedicalScribeJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteMedicalScribeJob");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteMedicalScribeJobCommand");
var se_DeleteMedicalTranscriptionJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteMedicalTranscriptionJob");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteMedicalTranscriptionJobCommand");
var se_DeleteMedicalVocabularyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteMedicalVocabulary");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteMedicalVocabularyCommand");
var se_DeleteTranscriptionJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteTranscriptionJob");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteTranscriptionJobCommand");
var se_DeleteVocabularyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteVocabulary");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteVocabularyCommand");
var se_DeleteVocabularyFilterCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteVocabularyFilter");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteVocabularyFilterCommand");
var se_DescribeLanguageModelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeLanguageModel");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeLanguageModelCommand");
var se_GetCallAnalyticsCategoryCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetCallAnalyticsCategory");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetCallAnalyticsCategoryCommand");
var se_GetCallAnalyticsJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetCallAnalyticsJob");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetCallAnalyticsJobCommand");
var se_GetMedicalScribeJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetMedicalScribeJob");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetMedicalScribeJobCommand");
var se_GetMedicalTranscriptionJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetMedicalTranscriptionJob");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetMedicalTranscriptionJobCommand");
var se_GetMedicalVocabularyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetMedicalVocabulary");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetMedicalVocabularyCommand");
var se_GetTranscriptionJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetTranscriptionJob");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetTranscriptionJobCommand");
var se_GetVocabularyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetVocabulary");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetVocabularyCommand");
var se_GetVocabularyFilterCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetVocabularyFilter");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetVocabularyFilterCommand");
var se_ListCallAnalyticsCategoriesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListCallAnalyticsCategories");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListCallAnalyticsCategoriesCommand");
var se_ListCallAnalyticsJobsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListCallAnalyticsJobs");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListCallAnalyticsJobsCommand");
var se_ListLanguageModelsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListLanguageModels");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListLanguageModelsCommand");
var se_ListMedicalScribeJobsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListMedicalScribeJobs");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListMedicalScribeJobsCommand");
var se_ListMedicalTranscriptionJobsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListMedicalTranscriptionJobs");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListMedicalTranscriptionJobsCommand");
var se_ListMedicalVocabulariesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListMedicalVocabularies");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListMedicalVocabulariesCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListTagsForResource");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListTagsForResourceCommand");
var se_ListTranscriptionJobsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListTranscriptionJobs");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListTranscriptionJobsCommand");
var se_ListVocabulariesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListVocabularies");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListVocabulariesCommand");
var se_ListVocabularyFiltersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListVocabularyFilters");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListVocabularyFiltersCommand");
var se_StartCallAnalyticsJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StartCallAnalyticsJob");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StartCallAnalyticsJobCommand");
var se_StartMedicalScribeJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StartMedicalScribeJob");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StartMedicalScribeJobCommand");
var se_StartMedicalTranscriptionJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StartMedicalTranscriptionJob");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StartMedicalTranscriptionJobCommand");
var se_StartTranscriptionJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StartTranscriptionJob");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StartTranscriptionJobCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("TagResource");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UntagResource");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UntagResourceCommand");
var se_UpdateCallAnalyticsCategoryCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateCallAnalyticsCategory");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateCallAnalyticsCategoryCommand");
var se_UpdateMedicalVocabularyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateMedicalVocabulary");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateMedicalVocabularyCommand");
var se_UpdateVocabularyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateVocabulary");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateVocabularyCommand");
var se_UpdateVocabularyFilterCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateVocabularyFilter");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateVocabularyFilterCommand");
var de_CreateCallAnalyticsCategoryCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_CreateCallAnalyticsCategoryResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateCallAnalyticsCategoryCommand");
var de_CreateLanguageModelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateLanguageModelCommand");
var de_CreateMedicalVocabularyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_CreateMedicalVocabularyResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateMedicalVocabularyCommand");
var de_CreateVocabularyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_CreateVocabularyResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateVocabularyCommand");
var de_CreateVocabularyFilterCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_CreateVocabularyFilterResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateVocabularyFilterCommand");
var de_DeleteCallAnalyticsCategoryCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteCallAnalyticsCategoryCommand");
var de_DeleteCallAnalyticsJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteCallAnalyticsJobCommand");
var de_DeleteLanguageModelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteLanguageModelCommand");
var de_DeleteMedicalScribeJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteMedicalScribeJobCommand");
var de_DeleteMedicalTranscriptionJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteMedicalTranscriptionJobCommand");
var de_DeleteMedicalVocabularyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteMedicalVocabularyCommand");
var de_DeleteTranscriptionJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteTranscriptionJobCommand");
var de_DeleteVocabularyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteVocabularyCommand");
var de_DeleteVocabularyFilterCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteVocabularyFilterCommand");
var de_DescribeLanguageModelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_DescribeLanguageModelResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeLanguageModelCommand");
var de_GetCallAnalyticsCategoryCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_GetCallAnalyticsCategoryResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetCallAnalyticsCategoryCommand");
var de_GetCallAnalyticsJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_GetCallAnalyticsJobResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetCallAnalyticsJobCommand");
var de_GetMedicalScribeJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_GetMedicalScribeJobResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetMedicalScribeJobCommand");
var de_GetMedicalTranscriptionJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_GetMedicalTranscriptionJobResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetMedicalTranscriptionJobCommand");
var de_GetMedicalVocabularyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_GetMedicalVocabularyResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetMedicalVocabularyCommand");
var de_GetTranscriptionJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_GetTranscriptionJobResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetTranscriptionJobCommand");
var de_GetVocabularyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_GetVocabularyResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetVocabularyCommand");
var de_GetVocabularyFilterCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_GetVocabularyFilterResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetVocabularyFilterCommand");
var de_ListCallAnalyticsCategoriesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_ListCallAnalyticsCategoriesResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListCallAnalyticsCategoriesCommand");
var de_ListCallAnalyticsJobsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_ListCallAnalyticsJobsResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListCallAnalyticsJobsCommand");
var de_ListLanguageModelsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_ListLanguageModelsResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListLanguageModelsCommand");
var de_ListMedicalScribeJobsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_ListMedicalScribeJobsResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListMedicalScribeJobsCommand");
var de_ListMedicalTranscriptionJobsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_ListMedicalTranscriptionJobsResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListMedicalTranscriptionJobsCommand");
var de_ListMedicalVocabulariesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_ListMedicalVocabulariesResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListMedicalVocabulariesCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListTagsForResourceCommand");
var de_ListTranscriptionJobsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_ListTranscriptionJobsResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListTranscriptionJobsCommand");
var de_ListVocabulariesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_ListVocabulariesResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListVocabulariesCommand");
var de_ListVocabularyFiltersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_ListVocabularyFiltersResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListVocabularyFiltersCommand");
var de_StartCallAnalyticsJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_StartCallAnalyticsJobResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_StartCallAnalyticsJobCommand");
var de_StartMedicalScribeJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_StartMedicalScribeJobResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_StartMedicalScribeJobCommand");
var de_StartMedicalTranscriptionJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_StartMedicalTranscriptionJobResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_StartMedicalTranscriptionJobCommand");
var de_StartTranscriptionJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_StartTranscriptionJobResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_StartTranscriptionJobCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UntagResourceCommand");
var de_UpdateCallAnalyticsCategoryCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_UpdateCallAnalyticsCategoryResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateCallAnalyticsCategoryCommand");
var de_UpdateMedicalVocabularyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_UpdateMedicalVocabularyResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateMedicalVocabularyCommand");
var de_UpdateVocabularyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_UpdateVocabularyResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateVocabularyCommand");
var de_UpdateVocabularyFilterCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_UpdateVocabularyFilterResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateVocabularyFilterCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "BadRequestException":
    case "com.amazonaws.transcribe#BadRequestException":
      throw await de_BadRequestExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.transcribe#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "InternalFailureException":
    case "com.amazonaws.transcribe#InternalFailureException":
      throw await de_InternalFailureExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.transcribe#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "NotFoundException":
    case "com.amazonaws.transcribe#NotFoundException":
      throw await de_NotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var de_BadRequestExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new BadRequestException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_BadRequestExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ConflictExceptionRes");
var de_InternalFailureExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InternalFailureException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InternalFailureExceptionRes");
var de_LimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new LimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_LimitExceededExceptionRes");
var de_NotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new NotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_NotFoundExceptionRes");
var de_CallAnalyticsJob = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CallAnalyticsJobDetails: import_smithy_client._json,
    CallAnalyticsJobName: import_smithy_client.expectString,
    CallAnalyticsJobStatus: import_smithy_client.expectString,
    ChannelDefinitions: import_smithy_client._json,
    CompletionTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "CompletionTime"),
    CreationTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "CreationTime"),
    DataAccessRoleArn: import_smithy_client.expectString,
    FailureReason: import_smithy_client.expectString,
    IdentifiedLanguageScore: import_smithy_client.limitedParseFloat32,
    LanguageCode: import_smithy_client.expectString,
    Media: import_smithy_client._json,
    MediaFormat: import_smithy_client.expectString,
    MediaSampleRateHertz: import_smithy_client.expectInt32,
    Settings: import_smithy_client._json,
    StartTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "StartTime"),
    Tags: import_smithy_client._json,
    Transcript: import_smithy_client._json
  });
}, "de_CallAnalyticsJob");
var de_CallAnalyticsJobSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_CallAnalyticsJobSummary(entry, context);
  });
  return retVal;
}, "de_CallAnalyticsJobSummaries");
var de_CallAnalyticsJobSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CallAnalyticsJobDetails: import_smithy_client._json,
    CallAnalyticsJobName: import_smithy_client.expectString,
    CallAnalyticsJobStatus: import_smithy_client.expectString,
    CompletionTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "CompletionTime"),
    CreationTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "CreationTime"),
    FailureReason: import_smithy_client.expectString,
    LanguageCode: import_smithy_client.expectString,
    StartTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "StartTime")
  });
}, "de_CallAnalyticsJobSummary");
var de_CategoryProperties = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CategoryName: import_smithy_client.expectString,
    CreateTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "CreateTime"),
    InputType: import_smithy_client.expectString,
    LastUpdateTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "LastUpdateTime"),
    Rules: import_smithy_client._json,
    Tags: import_smithy_client._json
  });
}, "de_CategoryProperties");
var de_CategoryPropertiesList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_CategoryProperties(entry, context);
  });
  return retVal;
}, "de_CategoryPropertiesList");
var de_CreateCallAnalyticsCategoryResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CategoryProperties: /* @__PURE__ */ __name((_) => de_CategoryProperties(_, context), "CategoryProperties")
  });
}, "de_CreateCallAnalyticsCategoryResponse");
var de_CreateMedicalVocabularyResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    FailureReason: import_smithy_client.expectString,
    LanguageCode: import_smithy_client.expectString,
    LastModifiedTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "LastModifiedTime"),
    VocabularyName: import_smithy_client.expectString,
    VocabularyState: import_smithy_client.expectString
  });
}, "de_CreateMedicalVocabularyResponse");
var de_CreateVocabularyFilterResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    LanguageCode: import_smithy_client.expectString,
    LastModifiedTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "LastModifiedTime"),
    VocabularyFilterName: import_smithy_client.expectString
  });
}, "de_CreateVocabularyFilterResponse");
var de_CreateVocabularyResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    FailureReason: import_smithy_client.expectString,
    LanguageCode: import_smithy_client.expectString,
    LastModifiedTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "LastModifiedTime"),
    VocabularyName: import_smithy_client.expectString,
    VocabularyState: import_smithy_client.expectString
  });
}, "de_CreateVocabularyResponse");
var de_DescribeLanguageModelResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    LanguageModel: /* @__PURE__ */ __name((_) => de_LanguageModel(_, context), "LanguageModel")
  });
}, "de_DescribeLanguageModelResponse");
var de_GetCallAnalyticsCategoryResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CategoryProperties: /* @__PURE__ */ __name((_) => de_CategoryProperties(_, context), "CategoryProperties")
  });
}, "de_GetCallAnalyticsCategoryResponse");
var de_GetCallAnalyticsJobResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CallAnalyticsJob: /* @__PURE__ */ __name((_) => de_CallAnalyticsJob(_, context), "CallAnalyticsJob")
  });
}, "de_GetCallAnalyticsJobResponse");
var de_GetMedicalScribeJobResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    MedicalScribeJob: /* @__PURE__ */ __name((_) => de_MedicalScribeJob(_, context), "MedicalScribeJob")
  });
}, "de_GetMedicalScribeJobResponse");
var de_GetMedicalTranscriptionJobResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    MedicalTranscriptionJob: /* @__PURE__ */ __name((_) => de_MedicalTranscriptionJob(_, context), "MedicalTranscriptionJob")
  });
}, "de_GetMedicalTranscriptionJobResponse");
var de_GetMedicalVocabularyResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    DownloadUri: import_smithy_client.expectString,
    FailureReason: import_smithy_client.expectString,
    LanguageCode: import_smithy_client.expectString,
    LastModifiedTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "LastModifiedTime"),
    VocabularyName: import_smithy_client.expectString,
    VocabularyState: import_smithy_client.expectString
  });
}, "de_GetMedicalVocabularyResponse");
var de_GetTranscriptionJobResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    TranscriptionJob: /* @__PURE__ */ __name((_) => de_TranscriptionJob(_, context), "TranscriptionJob")
  });
}, "de_GetTranscriptionJobResponse");
var de_GetVocabularyFilterResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    DownloadUri: import_smithy_client.expectString,
    LanguageCode: import_smithy_client.expectString,
    LastModifiedTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "LastModifiedTime"),
    VocabularyFilterName: import_smithy_client.expectString
  });
}, "de_GetVocabularyFilterResponse");
var de_GetVocabularyResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    DownloadUri: import_smithy_client.expectString,
    FailureReason: import_smithy_client.expectString,
    LanguageCode: import_smithy_client.expectString,
    LastModifiedTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "LastModifiedTime"),
    VocabularyName: import_smithy_client.expectString,
    VocabularyState: import_smithy_client.expectString
  });
}, "de_GetVocabularyResponse");
var de_LanguageCodeItem = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    DurationInSeconds: import_smithy_client.limitedParseFloat32,
    LanguageCode: import_smithy_client.expectString
  });
}, "de_LanguageCodeItem");
var de_LanguageCodeList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_LanguageCodeItem(entry, context);
  });
  return retVal;
}, "de_LanguageCodeList");
var de_LanguageModel = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    BaseModelName: import_smithy_client.expectString,
    CreateTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "CreateTime"),
    FailureReason: import_smithy_client.expectString,
    InputDataConfig: import_smithy_client._json,
    LanguageCode: import_smithy_client.expectString,
    LastModifiedTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "LastModifiedTime"),
    ModelName: import_smithy_client.expectString,
    ModelStatus: import_smithy_client.expectString,
    UpgradeAvailability: import_smithy_client.expectBoolean
  });
}, "de_LanguageModel");
var de_ListCallAnalyticsCategoriesResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Categories: /* @__PURE__ */ __name((_) => de_CategoryPropertiesList(_, context), "Categories"),
    NextToken: import_smithy_client.expectString
  });
}, "de_ListCallAnalyticsCategoriesResponse");
var de_ListCallAnalyticsJobsResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CallAnalyticsJobSummaries: /* @__PURE__ */ __name((_) => de_CallAnalyticsJobSummaries(_, context), "CallAnalyticsJobSummaries"),
    NextToken: import_smithy_client.expectString,
    Status: import_smithy_client.expectString
  });
}, "de_ListCallAnalyticsJobsResponse");
var de_ListLanguageModelsResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Models: /* @__PURE__ */ __name((_) => de_Models(_, context), "Models"),
    NextToken: import_smithy_client.expectString
  });
}, "de_ListLanguageModelsResponse");
var de_ListMedicalScribeJobsResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    MedicalScribeJobSummaries: /* @__PURE__ */ __name((_) => de_MedicalScribeJobSummaries(_, context), "MedicalScribeJobSummaries"),
    NextToken: import_smithy_client.expectString,
    Status: import_smithy_client.expectString
  });
}, "de_ListMedicalScribeJobsResponse");
var de_ListMedicalTranscriptionJobsResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    MedicalTranscriptionJobSummaries: /* @__PURE__ */ __name((_) => de_MedicalTranscriptionJobSummaries(_, context), "MedicalTranscriptionJobSummaries"),
    NextToken: import_smithy_client.expectString,
    Status: import_smithy_client.expectString
  });
}, "de_ListMedicalTranscriptionJobsResponse");
var de_ListMedicalVocabulariesResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    NextToken: import_smithy_client.expectString,
    Status: import_smithy_client.expectString,
    Vocabularies: /* @__PURE__ */ __name((_) => de_Vocabularies(_, context), "Vocabularies")
  });
}, "de_ListMedicalVocabulariesResponse");
var de_ListTranscriptionJobsResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    NextToken: import_smithy_client.expectString,
    Status: import_smithy_client.expectString,
    TranscriptionJobSummaries: /* @__PURE__ */ __name((_) => de_TranscriptionJobSummaries(_, context), "TranscriptionJobSummaries")
  });
}, "de_ListTranscriptionJobsResponse");
var de_ListVocabulariesResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    NextToken: import_smithy_client.expectString,
    Status: import_smithy_client.expectString,
    Vocabularies: /* @__PURE__ */ __name((_) => de_Vocabularies(_, context), "Vocabularies")
  });
}, "de_ListVocabulariesResponse");
var de_ListVocabularyFiltersResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    NextToken: import_smithy_client.expectString,
    VocabularyFilters: /* @__PURE__ */ __name((_) => de_VocabularyFilters(_, context), "VocabularyFilters")
  });
}, "de_ListVocabularyFiltersResponse");
var de_MedicalScribeJob = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ChannelDefinitions: import_smithy_client._json,
    CompletionTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "CompletionTime"),
    CreationTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "CreationTime"),
    DataAccessRoleArn: import_smithy_client.expectString,
    FailureReason: import_smithy_client.expectString,
    LanguageCode: import_smithy_client.expectString,
    Media: import_smithy_client._json,
    MedicalScribeContextProvided: import_smithy_client.expectBoolean,
    MedicalScribeJobName: import_smithy_client.expectString,
    MedicalScribeJobStatus: import_smithy_client.expectString,
    MedicalScribeOutput: import_smithy_client._json,
    Settings: import_smithy_client._json,
    StartTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "StartTime"),
    Tags: import_smithy_client._json
  });
}, "de_MedicalScribeJob");
var de_MedicalScribeJobSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_MedicalScribeJobSummary(entry, context);
  });
  return retVal;
}, "de_MedicalScribeJobSummaries");
var de_MedicalScribeJobSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CompletionTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "CompletionTime"),
    CreationTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "CreationTime"),
    FailureReason: import_smithy_client.expectString,
    LanguageCode: import_smithy_client.expectString,
    MedicalScribeJobName: import_smithy_client.expectString,
    MedicalScribeJobStatus: import_smithy_client.expectString,
    StartTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "StartTime")
  });
}, "de_MedicalScribeJobSummary");
var de_MedicalTranscriptionJob = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CompletionTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "CompletionTime"),
    ContentIdentificationType: import_smithy_client.expectString,
    CreationTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "CreationTime"),
    FailureReason: import_smithy_client.expectString,
    LanguageCode: import_smithy_client.expectString,
    Media: import_smithy_client._json,
    MediaFormat: import_smithy_client.expectString,
    MediaSampleRateHertz: import_smithy_client.expectInt32,
    MedicalTranscriptionJobName: import_smithy_client.expectString,
    Settings: import_smithy_client._json,
    Specialty: import_smithy_client.expectString,
    StartTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "StartTime"),
    Tags: import_smithy_client._json,
    Transcript: import_smithy_client._json,
    TranscriptionJobStatus: import_smithy_client.expectString,
    Type: import_smithy_client.expectString
  });
}, "de_MedicalTranscriptionJob");
var de_MedicalTranscriptionJobSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_MedicalTranscriptionJobSummary(entry, context);
  });
  return retVal;
}, "de_MedicalTranscriptionJobSummaries");
var de_MedicalTranscriptionJobSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CompletionTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "CompletionTime"),
    ContentIdentificationType: import_smithy_client.expectString,
    CreationTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "CreationTime"),
    FailureReason: import_smithy_client.expectString,
    LanguageCode: import_smithy_client.expectString,
    MedicalTranscriptionJobName: import_smithy_client.expectString,
    OutputLocationType: import_smithy_client.expectString,
    Specialty: import_smithy_client.expectString,
    StartTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "StartTime"),
    TranscriptionJobStatus: import_smithy_client.expectString,
    Type: import_smithy_client.expectString
  });
}, "de_MedicalTranscriptionJobSummary");
var de_Models = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_LanguageModel(entry, context);
  });
  return retVal;
}, "de_Models");
var de_StartCallAnalyticsJobResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CallAnalyticsJob: /* @__PURE__ */ __name((_) => de_CallAnalyticsJob(_, context), "CallAnalyticsJob")
  });
}, "de_StartCallAnalyticsJobResponse");
var de_StartMedicalScribeJobResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    MedicalScribeJob: /* @__PURE__ */ __name((_) => de_MedicalScribeJob(_, context), "MedicalScribeJob")
  });
}, "de_StartMedicalScribeJobResponse");
var de_StartMedicalTranscriptionJobResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    MedicalTranscriptionJob: /* @__PURE__ */ __name((_) => de_MedicalTranscriptionJob(_, context), "MedicalTranscriptionJob")
  });
}, "de_StartMedicalTranscriptionJobResponse");
var de_StartTranscriptionJobResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    TranscriptionJob: /* @__PURE__ */ __name((_) => de_TranscriptionJob(_, context), "TranscriptionJob")
  });
}, "de_StartTranscriptionJobResponse");
var de_TranscriptionJob = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CompletionTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "CompletionTime"),
    ContentRedaction: import_smithy_client._json,
    CreationTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "CreationTime"),
    FailureReason: import_smithy_client.expectString,
    IdentifiedLanguageScore: import_smithy_client.limitedParseFloat32,
    IdentifyLanguage: import_smithy_client.expectBoolean,
    IdentifyMultipleLanguages: import_smithy_client.expectBoolean,
    JobExecutionSettings: import_smithy_client._json,
    LanguageCode: import_smithy_client.expectString,
    LanguageCodes: /* @__PURE__ */ __name((_) => de_LanguageCodeList(_, context), "LanguageCodes"),
    LanguageIdSettings: import_smithy_client._json,
    LanguageOptions: import_smithy_client._json,
    Media: import_smithy_client._json,
    MediaFormat: import_smithy_client.expectString,
    MediaSampleRateHertz: import_smithy_client.expectInt32,
    ModelSettings: import_smithy_client._json,
    Settings: import_smithy_client._json,
    StartTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "StartTime"),
    Subtitles: import_smithy_client._json,
    Tags: import_smithy_client._json,
    ToxicityDetection: import_smithy_client._json,
    Transcript: import_smithy_client._json,
    TranscriptionJobName: import_smithy_client.expectString,
    TranscriptionJobStatus: import_smithy_client.expectString
  });
}, "de_TranscriptionJob");
var de_TranscriptionJobSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_TranscriptionJobSummary(entry, context);
  });
  return retVal;
}, "de_TranscriptionJobSummaries");
var de_TranscriptionJobSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CompletionTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "CompletionTime"),
    ContentRedaction: import_smithy_client._json,
    CreationTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "CreationTime"),
    FailureReason: import_smithy_client.expectString,
    IdentifiedLanguageScore: import_smithy_client.limitedParseFloat32,
    IdentifyLanguage: import_smithy_client.expectBoolean,
    IdentifyMultipleLanguages: import_smithy_client.expectBoolean,
    LanguageCode: import_smithy_client.expectString,
    LanguageCodes: /* @__PURE__ */ __name((_) => de_LanguageCodeList(_, context), "LanguageCodes"),
    ModelSettings: import_smithy_client._json,
    OutputLocationType: import_smithy_client.expectString,
    StartTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "StartTime"),
    ToxicityDetection: import_smithy_client._json,
    TranscriptionJobName: import_smithy_client.expectString,
    TranscriptionJobStatus: import_smithy_client.expectString
  });
}, "de_TranscriptionJobSummary");
var de_UpdateCallAnalyticsCategoryResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CategoryProperties: /* @__PURE__ */ __name((_) => de_CategoryProperties(_, context), "CategoryProperties")
  });
}, "de_UpdateCallAnalyticsCategoryResponse");
var de_UpdateMedicalVocabularyResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    LanguageCode: import_smithy_client.expectString,
    LastModifiedTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "LastModifiedTime"),
    VocabularyName: import_smithy_client.expectString,
    VocabularyState: import_smithy_client.expectString
  });
}, "de_UpdateMedicalVocabularyResponse");
var de_UpdateVocabularyFilterResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    LanguageCode: import_smithy_client.expectString,
    LastModifiedTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "LastModifiedTime"),
    VocabularyFilterName: import_smithy_client.expectString
  });
}, "de_UpdateVocabularyFilterResponse");
var de_UpdateVocabularyResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    LanguageCode: import_smithy_client.expectString,
    LastModifiedTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "LastModifiedTime"),
    VocabularyName: import_smithy_client.expectString,
    VocabularyState: import_smithy_client.expectString
  });
}, "de_UpdateVocabularyResponse");
var de_Vocabularies = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_VocabularyInfo(entry, context);
  });
  return retVal;
}, "de_Vocabularies");
var de_VocabularyFilterInfo = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    LanguageCode: import_smithy_client.expectString,
    LastModifiedTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "LastModifiedTime"),
    VocabularyFilterName: import_smithy_client.expectString
  });
}, "de_VocabularyFilterInfo");
var de_VocabularyFilters = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_VocabularyFilterInfo(entry, context);
  });
  return retVal;
}, "de_VocabularyFilters");
var de_VocabularyInfo = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    LanguageCode: import_smithy_client.expectString,
    LastModifiedTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "LastModifiedTime"),
    VocabularyName: import_smithy_client.expectString,
    VocabularyState: import_smithy_client.expectString
  });
}, "de_VocabularyInfo");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var throwDefaultError = (0, import_smithy_client.withBaseException)(TranscribeServiceException);
var buildHttpRpcRequest = /* @__PURE__ */ __name(async (context, headers, path, resolvedHostname, body) => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const contents = {
    protocol,
    hostname,
    port,
    method: "POST",
    path: basePath.endsWith("/") ? basePath.slice(0, -1) + path : basePath + path,
    headers
  };
  if (resolvedHostname !== void 0) {
    contents.hostname = resolvedHostname;
  }
  if (body !== void 0) {
    contents.body = body;
  }
  return new import_protocol_http.HttpRequest(contents);
}, "buildHttpRpcRequest");
function sharedHeaders(operation) {
  return {
    "content-type": "application/x-amz-json-1.1",
    "x-amz-target": `Transcribe.${operation}`
  };
}
__name(sharedHeaders, "sharedHeaders");

// src/commands/CreateCallAnalyticsCategoryCommand.ts
var CreateCallAnalyticsCategoryCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "CreateCallAnalyticsCategory", {}).n("TranscribeClient", "CreateCallAnalyticsCategoryCommand").f(void 0, void 0).ser(se_CreateCallAnalyticsCategoryCommand).de(de_CreateCallAnalyticsCategoryCommand).build() {
  static {
    __name(this, "CreateCallAnalyticsCategoryCommand");
  }
};

// src/commands/CreateLanguageModelCommand.ts



var CreateLanguageModelCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "CreateLanguageModel", {}).n("TranscribeClient", "CreateLanguageModelCommand").f(void 0, void 0).ser(se_CreateLanguageModelCommand).de(de_CreateLanguageModelCommand).build() {
  static {
    __name(this, "CreateLanguageModelCommand");
  }
};

// src/commands/CreateMedicalVocabularyCommand.ts



var CreateMedicalVocabularyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "CreateMedicalVocabulary", {}).n("TranscribeClient", "CreateMedicalVocabularyCommand").f(void 0, void 0).ser(se_CreateMedicalVocabularyCommand).de(de_CreateMedicalVocabularyCommand).build() {
  static {
    __name(this, "CreateMedicalVocabularyCommand");
  }
};

// src/commands/CreateVocabularyCommand.ts



var CreateVocabularyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "CreateVocabulary", {}).n("TranscribeClient", "CreateVocabularyCommand").f(void 0, void 0).ser(se_CreateVocabularyCommand).de(de_CreateVocabularyCommand).build() {
  static {
    __name(this, "CreateVocabularyCommand");
  }
};

// src/commands/CreateVocabularyFilterCommand.ts



var CreateVocabularyFilterCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "CreateVocabularyFilter", {}).n("TranscribeClient", "CreateVocabularyFilterCommand").f(void 0, void 0).ser(se_CreateVocabularyFilterCommand).de(de_CreateVocabularyFilterCommand).build() {
  static {
    __name(this, "CreateVocabularyFilterCommand");
  }
};

// src/commands/DeleteCallAnalyticsCategoryCommand.ts



var DeleteCallAnalyticsCategoryCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "DeleteCallAnalyticsCategory", {}).n("TranscribeClient", "DeleteCallAnalyticsCategoryCommand").f(void 0, void 0).ser(se_DeleteCallAnalyticsCategoryCommand).de(de_DeleteCallAnalyticsCategoryCommand).build() {
  static {
    __name(this, "DeleteCallAnalyticsCategoryCommand");
  }
};

// src/commands/DeleteCallAnalyticsJobCommand.ts



var DeleteCallAnalyticsJobCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "DeleteCallAnalyticsJob", {}).n("TranscribeClient", "DeleteCallAnalyticsJobCommand").f(void 0, void 0).ser(se_DeleteCallAnalyticsJobCommand).de(de_DeleteCallAnalyticsJobCommand).build() {
  static {
    __name(this, "DeleteCallAnalyticsJobCommand");
  }
};

// src/commands/DeleteLanguageModelCommand.ts



var DeleteLanguageModelCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "DeleteLanguageModel", {}).n("TranscribeClient", "DeleteLanguageModelCommand").f(void 0, void 0).ser(se_DeleteLanguageModelCommand).de(de_DeleteLanguageModelCommand).build() {
  static {
    __name(this, "DeleteLanguageModelCommand");
  }
};

// src/commands/DeleteMedicalScribeJobCommand.ts



var DeleteMedicalScribeJobCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "DeleteMedicalScribeJob", {}).n("TranscribeClient", "DeleteMedicalScribeJobCommand").f(void 0, void 0).ser(se_DeleteMedicalScribeJobCommand).de(de_DeleteMedicalScribeJobCommand).build() {
  static {
    __name(this, "DeleteMedicalScribeJobCommand");
  }
};

// src/commands/DeleteMedicalTranscriptionJobCommand.ts



var DeleteMedicalTranscriptionJobCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "DeleteMedicalTranscriptionJob", {}).n("TranscribeClient", "DeleteMedicalTranscriptionJobCommand").f(void 0, void 0).ser(se_DeleteMedicalTranscriptionJobCommand).de(de_DeleteMedicalTranscriptionJobCommand).build() {
  static {
    __name(this, "DeleteMedicalTranscriptionJobCommand");
  }
};

// src/commands/DeleteMedicalVocabularyCommand.ts



var DeleteMedicalVocabularyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "DeleteMedicalVocabulary", {}).n("TranscribeClient", "DeleteMedicalVocabularyCommand").f(void 0, void 0).ser(se_DeleteMedicalVocabularyCommand).de(de_DeleteMedicalVocabularyCommand).build() {
  static {
    __name(this, "DeleteMedicalVocabularyCommand");
  }
};

// src/commands/DeleteTranscriptionJobCommand.ts



var DeleteTranscriptionJobCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "DeleteTranscriptionJob", {}).n("TranscribeClient", "DeleteTranscriptionJobCommand").f(void 0, void 0).ser(se_DeleteTranscriptionJobCommand).de(de_DeleteTranscriptionJobCommand).build() {
  static {
    __name(this, "DeleteTranscriptionJobCommand");
  }
};

// src/commands/DeleteVocabularyCommand.ts



var DeleteVocabularyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "DeleteVocabulary", {}).n("TranscribeClient", "DeleteVocabularyCommand").f(void 0, void 0).ser(se_DeleteVocabularyCommand).de(de_DeleteVocabularyCommand).build() {
  static {
    __name(this, "DeleteVocabularyCommand");
  }
};

// src/commands/DeleteVocabularyFilterCommand.ts



var DeleteVocabularyFilterCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "DeleteVocabularyFilter", {}).n("TranscribeClient", "DeleteVocabularyFilterCommand").f(void 0, void 0).ser(se_DeleteVocabularyFilterCommand).de(de_DeleteVocabularyFilterCommand).build() {
  static {
    __name(this, "DeleteVocabularyFilterCommand");
  }
};

// src/commands/DescribeLanguageModelCommand.ts



var DescribeLanguageModelCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "DescribeLanguageModel", {}).n("TranscribeClient", "DescribeLanguageModelCommand").f(void 0, void 0).ser(se_DescribeLanguageModelCommand).de(de_DescribeLanguageModelCommand).build() {
  static {
    __name(this, "DescribeLanguageModelCommand");
  }
};

// src/commands/GetCallAnalyticsCategoryCommand.ts



var GetCallAnalyticsCategoryCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "GetCallAnalyticsCategory", {}).n("TranscribeClient", "GetCallAnalyticsCategoryCommand").f(void 0, void 0).ser(se_GetCallAnalyticsCategoryCommand).de(de_GetCallAnalyticsCategoryCommand).build() {
  static {
    __name(this, "GetCallAnalyticsCategoryCommand");
  }
};

// src/commands/GetCallAnalyticsJobCommand.ts



var GetCallAnalyticsJobCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "GetCallAnalyticsJob", {}).n("TranscribeClient", "GetCallAnalyticsJobCommand").f(void 0, void 0).ser(se_GetCallAnalyticsJobCommand).de(de_GetCallAnalyticsJobCommand).build() {
  static {
    __name(this, "GetCallAnalyticsJobCommand");
  }
};

// src/commands/GetMedicalScribeJobCommand.ts



var GetMedicalScribeJobCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "GetMedicalScribeJob", {}).n("TranscribeClient", "GetMedicalScribeJobCommand").f(void 0, void 0).ser(se_GetMedicalScribeJobCommand).de(de_GetMedicalScribeJobCommand).build() {
  static {
    __name(this, "GetMedicalScribeJobCommand");
  }
};

// src/commands/GetMedicalTranscriptionJobCommand.ts



var GetMedicalTranscriptionJobCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "GetMedicalTranscriptionJob", {}).n("TranscribeClient", "GetMedicalTranscriptionJobCommand").f(void 0, void 0).ser(se_GetMedicalTranscriptionJobCommand).de(de_GetMedicalTranscriptionJobCommand).build() {
  static {
    __name(this, "GetMedicalTranscriptionJobCommand");
  }
};

// src/commands/GetMedicalVocabularyCommand.ts



var GetMedicalVocabularyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "GetMedicalVocabulary", {}).n("TranscribeClient", "GetMedicalVocabularyCommand").f(void 0, void 0).ser(se_GetMedicalVocabularyCommand).de(de_GetMedicalVocabularyCommand).build() {
  static {
    __name(this, "GetMedicalVocabularyCommand");
  }
};

// src/commands/GetTranscriptionJobCommand.ts



var GetTranscriptionJobCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "GetTranscriptionJob", {}).n("TranscribeClient", "GetTranscriptionJobCommand").f(void 0, void 0).ser(se_GetTranscriptionJobCommand).de(de_GetTranscriptionJobCommand).build() {
  static {
    __name(this, "GetTranscriptionJobCommand");
  }
};

// src/commands/GetVocabularyCommand.ts



var GetVocabularyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "GetVocabulary", {}).n("TranscribeClient", "GetVocabularyCommand").f(void 0, void 0).ser(se_GetVocabularyCommand).de(de_GetVocabularyCommand).build() {
  static {
    __name(this, "GetVocabularyCommand");
  }
};

// src/commands/GetVocabularyFilterCommand.ts



var GetVocabularyFilterCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "GetVocabularyFilter", {}).n("TranscribeClient", "GetVocabularyFilterCommand").f(void 0, void 0).ser(se_GetVocabularyFilterCommand).de(de_GetVocabularyFilterCommand).build() {
  static {
    __name(this, "GetVocabularyFilterCommand");
  }
};

// src/commands/ListCallAnalyticsCategoriesCommand.ts



var ListCallAnalyticsCategoriesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "ListCallAnalyticsCategories", {}).n("TranscribeClient", "ListCallAnalyticsCategoriesCommand").f(void 0, void 0).ser(se_ListCallAnalyticsCategoriesCommand).de(de_ListCallAnalyticsCategoriesCommand).build() {
  static {
    __name(this, "ListCallAnalyticsCategoriesCommand");
  }
};

// src/commands/ListCallAnalyticsJobsCommand.ts



var ListCallAnalyticsJobsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "ListCallAnalyticsJobs", {}).n("TranscribeClient", "ListCallAnalyticsJobsCommand").f(void 0, void 0).ser(se_ListCallAnalyticsJobsCommand).de(de_ListCallAnalyticsJobsCommand).build() {
  static {
    __name(this, "ListCallAnalyticsJobsCommand");
  }
};

// src/commands/ListLanguageModelsCommand.ts



var ListLanguageModelsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "ListLanguageModels", {}).n("TranscribeClient", "ListLanguageModelsCommand").f(void 0, void 0).ser(se_ListLanguageModelsCommand).de(de_ListLanguageModelsCommand).build() {
  static {
    __name(this, "ListLanguageModelsCommand");
  }
};

// src/commands/ListMedicalScribeJobsCommand.ts



var ListMedicalScribeJobsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "ListMedicalScribeJobs", {}).n("TranscribeClient", "ListMedicalScribeJobsCommand").f(void 0, void 0).ser(se_ListMedicalScribeJobsCommand).de(de_ListMedicalScribeJobsCommand).build() {
  static {
    __name(this, "ListMedicalScribeJobsCommand");
  }
};

// src/commands/ListMedicalTranscriptionJobsCommand.ts



var ListMedicalTranscriptionJobsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "ListMedicalTranscriptionJobs", {}).n("TranscribeClient", "ListMedicalTranscriptionJobsCommand").f(void 0, void 0).ser(se_ListMedicalTranscriptionJobsCommand).de(de_ListMedicalTranscriptionJobsCommand).build() {
  static {
    __name(this, "ListMedicalTranscriptionJobsCommand");
  }
};

// src/commands/ListMedicalVocabulariesCommand.ts



var ListMedicalVocabulariesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "ListMedicalVocabularies", {}).n("TranscribeClient", "ListMedicalVocabulariesCommand").f(void 0, void 0).ser(se_ListMedicalVocabulariesCommand).de(de_ListMedicalVocabulariesCommand).build() {
  static {
    __name(this, "ListMedicalVocabulariesCommand");
  }
};

// src/commands/ListTagsForResourceCommand.ts



var ListTagsForResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "ListTagsForResource", {}).n("TranscribeClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
  static {
    __name(this, "ListTagsForResourceCommand");
  }
};

// src/commands/ListTranscriptionJobsCommand.ts



var ListTranscriptionJobsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "ListTranscriptionJobs", {}).n("TranscribeClient", "ListTranscriptionJobsCommand").f(void 0, void 0).ser(se_ListTranscriptionJobsCommand).de(de_ListTranscriptionJobsCommand).build() {
  static {
    __name(this, "ListTranscriptionJobsCommand");
  }
};

// src/commands/ListVocabulariesCommand.ts



var ListVocabulariesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "ListVocabularies", {}).n("TranscribeClient", "ListVocabulariesCommand").f(void 0, void 0).ser(se_ListVocabulariesCommand).de(de_ListVocabulariesCommand).build() {
  static {
    __name(this, "ListVocabulariesCommand");
  }
};

// src/commands/ListVocabularyFiltersCommand.ts



var ListVocabularyFiltersCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "ListVocabularyFilters", {}).n("TranscribeClient", "ListVocabularyFiltersCommand").f(void 0, void 0).ser(se_ListVocabularyFiltersCommand).de(de_ListVocabularyFiltersCommand).build() {
  static {
    __name(this, "ListVocabularyFiltersCommand");
  }
};

// src/commands/StartCallAnalyticsJobCommand.ts



var StartCallAnalyticsJobCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "StartCallAnalyticsJob", {}).n("TranscribeClient", "StartCallAnalyticsJobCommand").f(void 0, void 0).ser(se_StartCallAnalyticsJobCommand).de(de_StartCallAnalyticsJobCommand).build() {
  static {
    __name(this, "StartCallAnalyticsJobCommand");
  }
};

// src/commands/StartMedicalScribeJobCommand.ts



var StartMedicalScribeJobCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "StartMedicalScribeJob", {}).n("TranscribeClient", "StartMedicalScribeJobCommand").f(StartMedicalScribeJobRequestFilterSensitiveLog, void 0).ser(se_StartMedicalScribeJobCommand).de(de_StartMedicalScribeJobCommand).build() {
  static {
    __name(this, "StartMedicalScribeJobCommand");
  }
};

// src/commands/StartMedicalTranscriptionJobCommand.ts



var StartMedicalTranscriptionJobCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "StartMedicalTranscriptionJob", {}).n("TranscribeClient", "StartMedicalTranscriptionJobCommand").f(void 0, void 0).ser(se_StartMedicalTranscriptionJobCommand).de(de_StartMedicalTranscriptionJobCommand).build() {
  static {
    __name(this, "StartMedicalTranscriptionJobCommand");
  }
};

// src/commands/StartTranscriptionJobCommand.ts



var StartTranscriptionJobCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "StartTranscriptionJob", {}).n("TranscribeClient", "StartTranscriptionJobCommand").f(void 0, void 0).ser(se_StartTranscriptionJobCommand).de(de_StartTranscriptionJobCommand).build() {
  static {
    __name(this, "StartTranscriptionJobCommand");
  }
};

// src/commands/TagResourceCommand.ts



var TagResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "TagResource", {}).n("TranscribeClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
  static {
    __name(this, "TagResourceCommand");
  }
};

// src/commands/UntagResourceCommand.ts



var UntagResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "UntagResource", {}).n("TranscribeClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
  static {
    __name(this, "UntagResourceCommand");
  }
};

// src/commands/UpdateCallAnalyticsCategoryCommand.ts



var UpdateCallAnalyticsCategoryCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "UpdateCallAnalyticsCategory", {}).n("TranscribeClient", "UpdateCallAnalyticsCategoryCommand").f(void 0, void 0).ser(se_UpdateCallAnalyticsCategoryCommand).de(de_UpdateCallAnalyticsCategoryCommand).build() {
  static {
    __name(this, "UpdateCallAnalyticsCategoryCommand");
  }
};

// src/commands/UpdateMedicalVocabularyCommand.ts



var UpdateMedicalVocabularyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "UpdateMedicalVocabulary", {}).n("TranscribeClient", "UpdateMedicalVocabularyCommand").f(void 0, void 0).ser(se_UpdateMedicalVocabularyCommand).de(de_UpdateMedicalVocabularyCommand).build() {
  static {
    __name(this, "UpdateMedicalVocabularyCommand");
  }
};

// src/commands/UpdateVocabularyCommand.ts



var UpdateVocabularyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "UpdateVocabulary", {}).n("TranscribeClient", "UpdateVocabularyCommand").f(void 0, void 0).ser(se_UpdateVocabularyCommand).de(de_UpdateVocabularyCommand).build() {
  static {
    __name(this, "UpdateVocabularyCommand");
  }
};

// src/commands/UpdateVocabularyFilterCommand.ts



var UpdateVocabularyFilterCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Transcribe", "UpdateVocabularyFilter", {}).n("TranscribeClient", "UpdateVocabularyFilterCommand").f(void 0, void 0).ser(se_UpdateVocabularyFilterCommand).de(de_UpdateVocabularyFilterCommand).build() {
  static {
    __name(this, "UpdateVocabularyFilterCommand");
  }
};

// src/Transcribe.ts
var commands = {
  CreateCallAnalyticsCategoryCommand,
  CreateLanguageModelCommand,
  CreateMedicalVocabularyCommand,
  CreateVocabularyCommand,
  CreateVocabularyFilterCommand,
  DeleteCallAnalyticsCategoryCommand,
  DeleteCallAnalyticsJobCommand,
  DeleteLanguageModelCommand,
  DeleteMedicalScribeJobCommand,
  DeleteMedicalTranscriptionJobCommand,
  DeleteMedicalVocabularyCommand,
  DeleteTranscriptionJobCommand,
  DeleteVocabularyCommand,
  DeleteVocabularyFilterCommand,
  DescribeLanguageModelCommand,
  GetCallAnalyticsCategoryCommand,
  GetCallAnalyticsJobCommand,
  GetMedicalScribeJobCommand,
  GetMedicalTranscriptionJobCommand,
  GetMedicalVocabularyCommand,
  GetTranscriptionJobCommand,
  GetVocabularyCommand,
  GetVocabularyFilterCommand,
  ListCallAnalyticsCategoriesCommand,
  ListCallAnalyticsJobsCommand,
  ListLanguageModelsCommand,
  ListMedicalScribeJobsCommand,
  ListMedicalTranscriptionJobsCommand,
  ListMedicalVocabulariesCommand,
  ListTagsForResourceCommand,
  ListTranscriptionJobsCommand,
  ListVocabulariesCommand,
  ListVocabularyFiltersCommand,
  StartCallAnalyticsJobCommand,
  StartMedicalScribeJobCommand,
  StartMedicalTranscriptionJobCommand,
  StartTranscriptionJobCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateCallAnalyticsCategoryCommand,
  UpdateMedicalVocabularyCommand,
  UpdateVocabularyCommand,
  UpdateVocabularyFilterCommand
};
var Transcribe = class extends TranscribeClient {
  static {
    __name(this, "Transcribe");
  }
};
(0, import_smithy_client.createAggregatedClient)(commands, Transcribe);

// src/pagination/ListCallAnalyticsCategoriesPaginator.ts

var paginateListCallAnalyticsCategories = (0, import_core.createPaginator)(TranscribeClient, ListCallAnalyticsCategoriesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListCallAnalyticsJobsPaginator.ts

var paginateListCallAnalyticsJobs = (0, import_core.createPaginator)(TranscribeClient, ListCallAnalyticsJobsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListLanguageModelsPaginator.ts

var paginateListLanguageModels = (0, import_core.createPaginator)(TranscribeClient, ListLanguageModelsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListMedicalScribeJobsPaginator.ts

var paginateListMedicalScribeJobs = (0, import_core.createPaginator)(TranscribeClient, ListMedicalScribeJobsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListMedicalTranscriptionJobsPaginator.ts

var paginateListMedicalTranscriptionJobs = (0, import_core.createPaginator)(TranscribeClient, ListMedicalTranscriptionJobsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListMedicalVocabulariesPaginator.ts

var paginateListMedicalVocabularies = (0, import_core.createPaginator)(TranscribeClient, ListMedicalVocabulariesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListTranscriptionJobsPaginator.ts

var paginateListTranscriptionJobs = (0, import_core.createPaginator)(TranscribeClient, ListTranscriptionJobsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListVocabulariesPaginator.ts

var paginateListVocabularies = (0, import_core.createPaginator)(TranscribeClient, ListVocabulariesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListVocabularyFiltersPaginator.ts

var paginateListVocabularyFilters = (0, import_core.createPaginator)(TranscribeClient, ListVocabularyFiltersCommand, "NextToken", "NextToken", "MaxResults");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  TranscribeServiceException,
  __Client,
  TranscribeClient,
  Transcribe,
  $Command,
  CreateCallAnalyticsCategoryCommand,
  CreateLanguageModelCommand,
  CreateMedicalVocabularyCommand,
  CreateVocabularyCommand,
  CreateVocabularyFilterCommand,
  DeleteCallAnalyticsCategoryCommand,
  DeleteCallAnalyticsJobCommand,
  DeleteLanguageModelCommand,
  DeleteMedicalScribeJobCommand,
  DeleteMedicalTranscriptionJobCommand,
  DeleteMedicalVocabularyCommand,
  DeleteTranscriptionJobCommand,
  DeleteVocabularyCommand,
  DeleteVocabularyFilterCommand,
  DescribeLanguageModelCommand,
  GetCallAnalyticsCategoryCommand,
  GetCallAnalyticsJobCommand,
  GetMedicalScribeJobCommand,
  GetMedicalTranscriptionJobCommand,
  GetMedicalVocabularyCommand,
  GetTranscriptionJobCommand,
  GetVocabularyCommand,
  GetVocabularyFilterCommand,
  ListCallAnalyticsCategoriesCommand,
  ListCallAnalyticsJobsCommand,
  ListLanguageModelsCommand,
  ListMedicalScribeJobsCommand,
  ListMedicalTranscriptionJobsCommand,
  ListMedicalVocabulariesCommand,
  ListTagsForResourceCommand,
  ListTranscriptionJobsCommand,
  ListVocabulariesCommand,
  ListVocabularyFiltersCommand,
  StartCallAnalyticsJobCommand,
  StartMedicalScribeJobCommand,
  StartMedicalTranscriptionJobCommand,
  StartTranscriptionJobCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateCallAnalyticsCategoryCommand,
  UpdateMedicalVocabularyCommand,
  UpdateVocabularyCommand,
  UpdateVocabularyFilterCommand,
  paginateListCallAnalyticsCategories,
  paginateListCallAnalyticsJobs,
  paginateListLanguageModels,
  paginateListMedicalScribeJobs,
  paginateListMedicalTranscriptionJobs,
  paginateListMedicalVocabularies,
  paginateListTranscriptionJobs,
  paginateListVocabularies,
  paginateListVocabularyFilters,
  BadRequestException,
  BaseModelName,
  CallAnalyticsFeature,
  CallAnalyticsSkippedReasonCode,
  CallAnalyticsJobStatus,
  ParticipantRole,
  LanguageCode,
  MediaFormat,
  PiiEntityType,
  RedactionOutput,
  RedactionType,
  VocabularyFilterMethod,
  InputType,
  SentimentValue,
  TranscriptFilterType,
  Rule,
  MedicalScribeNoteTemplate,
  CLMLanguageCode,
  ConflictException,
  InternalFailureException,
  LimitExceededException,
  ModelStatus,
  VocabularyState,
  NotFoundException,
  MedicalScribeParticipantRole,
  MedicalScribeLanguageCode,
  MedicalScribeJobStatus,
  MedicalContentIdentificationType,
  Specialty,
  TranscriptionJobStatus,
  Type,
  SubtitleFormat,
  ToxicityCategory,
  OutputLocationType,
  Pronouns,
  MedicalScribePatientContextFilterSensitiveLog,
  MedicalScribeContextFilterSensitiveLog,
  StartMedicalScribeJobRequestFilterSensitiveLog
});

